//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName  GRAPHICS-BitGDI-CFbsDevice-PublicApi
//! @SYMScriptTestEnvironment This test script requires a basic ROM.

///////////////////////////////////////////////////////////////////////////////
// GRAPHICS-BitGDI-CFbsDevice-PublicApi.script
//
// Tests all public elements of the CFbsDevice class
// as a means of confidence that the API works as expected.
//
// The purpose is to provide a regression test suite of PublishedAll APIs for
// CFbsDevice related classes.
// Negative testing is performed to confirm that correct errors are returned
// when incorrect parameters are given.
//
// The tests are fully automated.
///////////////////////////////////////////////////////////////////////////////


LOAD_SUITE      T_GraphicsBitgdiApi
DELAY           1000

// ****************************************************************************
// Class Name		CFbsDevice
// ****************************************************************************

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0001
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0001
//! @SYMAPI                 	CFbsDevice::CreateContext(CFbsBitGc{prt}{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Create a CFbsBitGc object using a CFbsScreenDevice object and check the availablity of the context.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Draw a line to CFbsScreenDevice object through CFbsBitGc object.
//!								5. Check the line color.
//!								6. Destruct CFbsBitGc and CFbsScreenDevice objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. CFbsBitGc object can be created without error.
//!								2. The line color is as specified in test data.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0001-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0001-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            DrawLine                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0001-DrawLine_command05
        COMMAND            	fbsScrDev                       checkLineColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0001-checkLineColor_command06
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0001

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0002
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0002
//! @SYMAPI                 	CFbsDevice::CreateContext(CGraphicsContext{prt}{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Create a CGraphicsContext derived object using a CFbsScreenDevice object and check the availablity of the context.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CGraphicsContext derived object through CFbsScreenDevice object.
//!								4. Draw a line to CFbsScreenDevice object through CGraphicsContext derived object.
//!								5. Check the line color.
//!								6. Destruct CGraphicsContext derived and CFbsScreenDevice objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. CGraphicsContext derived object can be created without error.
//!								2. The line color is as specified in test data.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0002-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0002-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            DrawLine                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0002-DrawLine_command05
        COMMAND            	fbsScrDev                       checkLineColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0002-checkLineColor_command06
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0002

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0003
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0003
//! @SYMAPI                 	CFbsDevice::DisplayMode()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Gets the device's display mode.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create and destruct CFbsScreenDevice objects using all valid TDisplayMode values respectively.
//!								3. Get the display mode.
//!								4. Disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	DisplayMode() returns expected display mode.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0003-NewL_command02
        COMMAND            	fbsScrDev                       DisplayMode     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0003-DisplayMode_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0003

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0004
//! @SYMTestCaseID          	GRAPHICS-BITGDI-FbsDevice-PublicApi-0004
//! @SYMAPI                 	CFbsDevice::SizeInPixels()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Gets the size of the device, in pixels.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsBitmap Object and load the bitmap.
//!								3. Create a CFbsBitmapDevice Object with the CFbsBitmap object.
//!								4. Get the size of the device.
//!								5. Destroy all the objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	SizeInPixels() returns expected size.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       CFbsBitmapDevice 	            fbsBmpDev
        CREATE_OBJECT       RFbsSession 	 	            fbsSession
        CREATE_OBJECT		CFbsBitmap                      fbsBitmap
        COMMAND				fbsSession			            Connect
        COMMAND             fbsBitmap                       new
        COMMAND             fbsBitmap                       Load                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0004-Load_command03
        COMMAND				fbsBmpDev			            NewL				                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0004-NewL_command04
        COMMAND				fbsBmpDev			            SizeInPixels		                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0004-SizeInPixels_command05
        COMMAND             fbsBmpDev			            ~
        COMMAND             fbsBitmap                       ~
        COMMAND				fbsSession			Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0004

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0005
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0005
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares two rectangles with same color and size on same device, including their contents.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect(80, 10, 130, 110) in color TRgb(255, 255, 0).
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. The 2 rectangles are the same and RectCompare() returns true.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-DrawRect_command08
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-DrawRect_command09
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0005-RectCompare_command10
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0005

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0006
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0006
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares same rectangle on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw rectangle TRect(10, 10, 60, 110) in color TRgb(255, 0, 0).
//!								5. Compare the rectangle with itself.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns true.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-DrawRect_command08
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0006-RectCompare_command09
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0006

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0007
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0007
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 empty rectangles on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw a rectangle TRect(10, 10, 60, 110) in TRgb(0, 255, 0).
//!								5. Compare 2 empty rectangles TRect(20, 20, 20, 20) and TRect(80, 10, 80, 10).
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns true.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-DrawRect_command08
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0007-RectCompare_command09
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0007

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0008
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0008
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with same color and height but different width on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect (80, 10, 100, 110) in TRgb(0, 0, 255).
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-DrawRect_command08
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-DrawRect_command09
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0008-RectCompare_command10
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0008

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0009
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0009
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with different color and different width but same height on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect (80, 10, 100, 110) in TRgb(0, 0, 255) and TRgb(255, 0, 0) respectively.
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-DrawRect_command08
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-SetBrushColor_command09
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-SetPenColor_command10
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-DrawRect_command11
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0009-RectCompare_command12
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0009

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0010
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0010
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with different color but same size on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect (80, 10, 130, 110) in TRgb(0, 0, 255) and TRgb(255, 0, 0) respectively.
//!								5. Compare the 2 rectangles TRect(0, 0, 60, 110) and TRect(70, 0, 130, 110).
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-DrawRect_command08
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-SetBrushColor_command09
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-SetPenColor_command10
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-DrawRect_command11
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0010-RectCompare_command12
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0010

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0011
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0011
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Negative case. Compares 2 very large rectangles with same color and size on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(0, 0, 8000, 8000) and TRect (10, 10, 8010, 8010) in TRgb(0, 0, 255).
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-DrawRect_command08
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-DrawRect_command09
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0011-RectCompare_command10
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0011

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0015
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0015
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares two rectangles with same color and size on different device, including their contents.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!								3. Load a bitmap to CFbsBitmap object.
//!								4. Create a CFbsBitmapDevice through the bitmap.
//!								5. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								6. Create a CFbsBitGc object through CFbsBitmapDevice object.
//!								7. Clear the 2 devices and draw 2 rectangles TRect(10, 10, 40, 40) and TRect(10, 10, 40, 40) in color TRgb(0, 0, 0) on each device.
//!								8. Compare the 2 rectangles.
//!								9. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. The 2 rectangles are the same and RectCompare() returns true.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitmapDevice                fbsBmpDev
        CREATE_OBJECT		CFbsBitmap                      fbsBitmap
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc2
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-CreateContext_command03
        COMMAND             fbsBitmap                       new
        COMMAND             fbsBitmap                       Load                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-Load_command05
        COMMAND				fbsBmpDev			            NewL				                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-NewL_command06
        COMMAND            	fbsBmpDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-CreateContext_command07
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc2   		            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetBrushColor_command10
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetBrushStyle_command11
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetPenColor_command12
        COMMAND            	fbsBitGc2   		            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetBrushColor_command13
        COMMAND            	fbsBitGc2			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetBrushStyle_command14
        COMMAND            	fbsBitGc2			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-SetPenColor_command15
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-DrawRect_command16
        COMMAND            	fbsBitGc2			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-DrawRect_command17
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-RectCompare_command18
        COMMAND            	fbsBmpDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0015-RectCompare_command19
        COMMAND            	fbsScrDev                       Update
        DELAY		        500100
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBmpDev			            ~
        COMMAND            	fbsBitmap			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND            	fbsBitGc2			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0015

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0017
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0017
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with same color and width but different height on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(0, 0, 50, 50) and TRect (60, 10, 110, 50) in TRgb(0, 0, 255).
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-DrawRect_command08
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-DrawRect_command09
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0017-RectCompare_command10
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0017

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0018
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0018
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with different color and different height but same width on same device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect (80, 10, 130, 150) in TRgb(0, 0, 255) and TRgb(255, 0, 0) respectively.
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-DrawRect_command08
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-SetBrushColor_command09
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-SetPenColor_command10
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-DrawRect_command11
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0018-RectCompare_command12
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0018

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0019
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0019
//! @SYMAPI                 	CFbsDevice::RectCompare(const TRect{ref}, const CFbsDevice{ref}, const TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Compares 2 rectangles with different color but same size on same device, which is created using EColor16.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Create a CFbsBitGc object through CFbsScreenDevice object.
//!								4. Clear the device and draw 2 rectangles TRect(10, 10, 60, 110) and TRect (80, 10, 130, 110) in TRgb(0, 0, 255) and TRgb(255, 0, 0) respectively.
//!								5. Compare the 2 rectangles.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. RectCompare() can be called without error.
//!								2. RectCompare() returns false.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-CreateContext_command03
        COMMAND            	fbsBitGc			            Clear
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-SetBrushColor_command05
        COMMAND            	fbsBitGc			            SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-SetBrushStyle_command06
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-SetPenColor_command07
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-DrawRect_command08
        COMMAND            	fbsBitGc			            SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-SetBrushColor_command09
        COMMAND            	fbsBitGc			            SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-SetPenColor_command10
        COMMAND            	fbsBitGc			            DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-DrawRect_command11
        COMMAND            	fbsScrDev                       RectCompare                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0019-RectCompare_command12
        COMMAND            	fbsScrDev                       Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0019

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0020
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0020
//! @SYMAPI                 	CFbsDevice::AddFile(const TDesC{ref},TInt{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	06/02/2009
//! @SYMTestCaseDesc        	Adds a font file to the device's typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsFont object.
//!								3. Add a font file.
//!								4. Checks the expected font is added successfully.
//!								5. Remove the font file.
//!								6. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. Font file can be added successfully.
//!								2. Font in newly add font file can be used.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT       CFbsFont                        fbsFont
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-NewL_command02
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-GetNearestFontToDesignHeightInPixels_command03
        COMMAND !Error=-1  	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-FontSpecInTwips_command04
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-ReleaseFont_command05
        COMMAND            	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-AddFile_command06
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-GetNearestFontToDesignHeightInPixels_command07
        COMMAND            	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-FontSpecInTwips_command08
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-ReleaseFont_command09
        COMMAND            	fbsScrDev			            RemoveFile                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0020-RemoveFile_command10
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0020

START_TESTCASE    GRAPHICS-BITGDI-FbsDevice-PublicApi-0021
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0021
//! @SYMAPI                 	CFbsDevice::AddFile(const TDesC{ref},TInt{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Adds a dir as font file to the device's typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Add a dir.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	AddFile() returns -21 KErrAccessDenied.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0021-NewL_command02
        COMMAND !Error=-21 	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0021-AddFile_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0021

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0022
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0022
//! @SYMAPI                 	CFbsDevice::AddFile(const TDesC{ref},TInt{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Adds a non-existent file to the device's typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Add a non-existent file.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	AddFile() returns -1 KErrNotFound.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0022-NewL_command02
        COMMAND !Error=-1  	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0022-AddFile_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0022

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0023
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0023
//! @SYMAPI                 	CFbsDevice::RemoveFile(TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Removes the specified font file from the device's typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsFont object.
//!								3. Add a font file.
//!								4. Checks the expected font is added successfully.
//!								5. Remove the font file.
//!								6. Checks the expected font is removed successfully.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. Font file can be removed successfully.
//!								2. Font in newly add font file can not be used after RemoveFile().
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT       CFbsFont                        fbsFont
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-NewL_command02
        COMMAND            	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-AddFile_command03
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-GetNearestFontToDesignHeightInPixels_command04
        COMMAND            	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-FontSpecInTwips_command05
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-ReleaseFont_command06
        COMMAND            	fbsScrDev			            RemoveFile                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-RemoveFile_command07
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-GetNearestFontToDesignHeightInPixels_command08
        COMMAND !Error=-1  	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-FontSpecInTwips_command09
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0023-ReleaseFont_command10
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0023

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0024
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0024
//! @SYMAPI                 	CFbsDevice::RemoveFile(TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Removes all font files from the device's typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsFont object.
//!								3. Add a font file.
//!								4. Checks the expected font is added successfully.
//!								5. Remove all files.
//!								6. Checks the expected font is not removed because there are some font is being used.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	Font file can not be removed.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT       CFbsFont                        fbsFont
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-NewL_command02
        COMMAND            	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-AddFile_command03
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-GetNearestFontToDesignHeightInPixels_command04
        COMMAND            	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-FontSpecInTwips_command05
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-ReleaseFont_command06
        COMMAND            	fbsScrDev			            RemoveFile                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-RemoveFile_command07
        COMMAND            	fbsScrDev                       GetNearestFontToDesignHeightInPixels    GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-GetNearestFontToDesignHeightInPixels_command08
        COMMAND            	fbsFont                         FontSpecInTwips                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-FontSpecInTwips_command09
        COMMAND            	fbsScrDev			            ReleaseFont                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0024-ReleaseFont_command10
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0024

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0025
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0025
//! @SYMAPI                 	CFbsDevice::RemoveFile(TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Removes font file from the device's typeface store specified by UID -9.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Remove font file by specifying UID to -9.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	RemoveFile() will be called without panic.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT       CFbsFont                        fbsFont
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0025-NewL_command02
        COMMAND            	fbsScrDev			            RemoveFile                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0025-RemoveFile_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0025

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0026
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0026
//! @SYMAPI                 	CFbsDevice::NumTypefaces()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Gets the number of typefaces supported by the device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Get the number of typefaces.
//!								4. Add a font file.
//!								5. Get the number of typefaces.
//!								6. Remove the font file.
//!								7. Get the number of typefaces.
//!								8. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. NumTypefaces() will be called without error.
//!								2. Before AddFile() and after RemoveFile(), the NumTypefaces() returns same value.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-NewL_command02
        COMMAND            	fbsScrDev                       NumTypefaces                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-NumTypefaces_command03
        COMMAND            	fbsScrDev			            AddFile                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-AddFile_command04
        COMMAND            	fbsScrDev                       NumTypefaces                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-NumTypefaces_command05
        COMMAND            	fbsScrDev			            RemoveFile                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-RemoveFile_command06
        COMMAND            	fbsScrDev                       NumTypefaces                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0026-NumTypefaces_command07
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0026

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0027
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0027
//! @SYMAPI                 	CFbsDevice::TypefacesSupport(TTypefaceSupport{ref}, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Gets information about an indexed typeface.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Get the information about typeface indexed 6
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	TypefaceSupport() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0027-NewL_command02
        COMMAND            	fbsScrDev                       TypefaceSupport                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0027-TypefaceSupport_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0027

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0028
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0028
//! @SYMAPI                 	CFbsDevice::TypefacesSupport(TTypefaceSupport{ref}, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Gets information about an indexed typeface.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Get the information about typeface indexed -6
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	Get panic code 26 and panic string FBSCLI
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0028-NewL_command02
        COMMAND            	fbsScrDev                       TypefaceSupport                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0028-TypefaceSupport_command03
    END_TEST_BLOCK     !PanicString=FBSCLI     !PanicCode=26
    RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0028

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0029
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0029
//! @SYMAPI                 	CFbsDevice::SetCustomPalette(const CPalette{ptr})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Sets the variable 8 bits per pixel colour palette, replacing the system default one. Support for palette will depend on the screen driver implementation, it's not supported in techview.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CPalette object.
//!								3. Set the custom palette.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	SetCustomPalette() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CPalette                        palette
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0029-NewL_command02
        COMMAND            	palette                         NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0029-NewL_command03
        COMMAND            	fbsScrDev                       SetCustomPalette                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0029-SetCustomPalette_command04
        COMMAND            	fbsScrDev			            ~
        COMMAND            	palette			                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0029

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0030
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0030
//! @SYMAPI                 	CFbsDevice::GraphicsAccelerator()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Gets a pointer to the 2D graphics accelerator owned by the device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Gets a pointer to the 2D graphics accelerator.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	GraphicsAccelerator() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0030-NewL_command02
        COMMAND            	fbsScrDev                       GraphicsAccelerator
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0030

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0031
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0031
//! @SYMAPI                 	CFbsDevice::Orientation()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Gets the device's orientation.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsBigGc object.
//!								3. Set device orientation to EGraphicsOrientationRotated90, EGraphicsOrientationRotated180, EGraphicsOrientationRotated270, EGraphicsOrientationNormal and Get the device's orientation respectively.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	Orientation() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-CreateContext_command03
        COMMAND            	fbsBitGc                        OrientationsAvailable
        COMMAND            	fbsBitGc                        SetOrientation                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-SetOrientation_command05
        COMMAND            	fbsScrDev                       Orientation     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-Orientation_command06
        DELAY		        500000
        COMMAND            	fbsBitGc                        SetOrientation                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-SetOrientation_command08
        COMMAND            	fbsScrDev                       Orientation     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-Orientation_command09
        DELAY		        500000
        COMMAND            	fbsBitGc                        SetOrientation                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-SetOrientation_command11
        COMMAND            	fbsScrDev                       Orientation     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-Orientation_command12
        DELAY		        500000
        COMMAND            	fbsBitGc                        SetOrientation                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-SetOrientation_command14
        COMMAND            	fbsScrDev                       Orientation     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0031-Orientation_command15
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0031

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0032
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0032
//! @SYMAPI                 	CFbsDevice::DisplayMode16M()
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Return one of the 16M video modes defined in TDisplayMode
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create and destruct CFbsScreenDevice objects using all valid TDisplayMode values respectively.
//!								3. Get the display mode.
//!								4. Disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	DisplayMode16M() returns expected display mode.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0032-NewL_command02
        COMMAND            	fbsScrDev                       DisplayMode16M     		                GRAPHICS-BITGDI-FbsDevice-PublicApi-0032-DisplayMode16M_command03
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0032

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0033
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0033
//! @SYMAPI                 	CFbsDevice::SetScalingFactor(const TPoint{ref}, TInt, TInt, TInt, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Sets scaling factor by which the drawing device should scale the drawing images.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Set scaling factor to 10, 10, 1, 1 and scaling origin to TPoint(10, 10).
//!								4. Create a CFbsBitGc object through CFbsScreenDevice object and clear the device.
//!								5. Set brush and pen color to TRgb(0, 255, 255).
//!								6. Draw a rectangle TRect(10, 10, 30, 30) and check it.
//!								7. Set scaling factor to 1, 1, 1, 1 and scaling origin to TPoint(0, 0) and re-activate CFbsBitGc object.
//!								8. Clear the device. Set brush and pen color to TRgb(0, 255, 255).
//!								9. Draw a rectangle TRect(0, 0, 50, 50) and check it.
//!								10. Set scaling factor to 1, 1, 1, 1 and scaling origin to TPoint(10, 10) and re-activate CFbsBitGc object.
//!								11. Clear the device. Set brush and pen color to TRgb(0, 255, 255).
//!								12. Draw a rectangle TRect(0, 0, 50, 50) and check it.
//!								13. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetScalingFactor() will be called successfully.
//!								2. All the three rectangles are in color TRgb(0, 255, 255).
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetScalingFactor_command03
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-CreateContext_command04
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushColor_command06
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushStyle_command07
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetPenColor_command08
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-DrawRect_command09
        COMMAND            	fbsScrDev			            checkRectColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-checkRectColor_command10
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetScalingFactor_command13
        COMMAND            	fbsBitGc                        Activate                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-Activate_command14
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushColor_command15
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushColor_command17
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushStyle_command18
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetPenColor_command19
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-DrawRect_command20
        COMMAND            	fbsScrDev			            checkRectColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-checkRectColor_command21
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetScalingFactor_command24
        COMMAND            	fbsBitGc                        Activate                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-Activate_command25
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushColor_command26
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushColor_command28
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetBrushStyle_command29
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-SetPenColor_command30
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-DrawRect_command31
        COMMAND            	fbsScrDev			            checkRectColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0033-checkRectColor_command32
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc		                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0033

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0034
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0034
//! @SYMAPI                 	CFbsDevice::SetScalingFactor(const TPoint{ref}, TInt, TInt, TInt, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Sets scaling factor by which the drawing device should scale the drawing images using negative X-axis factor.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Set scaling factor to -10, 10, 1, 1 and scaling origin to TPoint(10, 10).
//!								4. Create a CFbsBitGc object through CFbsScreenDevice object. Set brush style to ESolidBrush and clear the device.
//!								5. Clear the device. Set brush and pen color to TRgb(0, 255, 255).
//!								6. Draw a rectangle TRect(0, 0, 100, 100).
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetScalingFactor() will be called successfully.
//!								2. The scaled rectangle will not be drawn.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-SetScalingFactor_command03
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-CreateContext_command04
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-SetBrushColor_command06
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-SetBrushStyle_command07
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-SetPenColor_command08
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0034-DrawRect_command09
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc		                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0034

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0035
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0035
//! @SYMAPI                 	CFbsDevice::SetScalingFactor(const TPoint{ref}, TInt, TInt, TInt, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Sets scaling factor by which the drawing device should scale the drawing images using negative Y-axis factor.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsBitGc object.
//!								3. Set brush style to ESolidBrush and clear the device.
//!								4. Set scaling factor to 10, -10, 1, 1 and scaling origin to TPoint(10, 10).
//!								5. Set brush and pen color to TRgb(0, 255, 255).
//!								6. Draw a rectangle TRect(0, 0, 100, 100).
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetScalingFactor() will be called successfully.
//!								2. The scaled rectangle will not be drawn.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-SetScalingFactor_command03
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-CreateContext_command04
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-SetBrushColor_command06
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-SetBrushStyle_command07
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-SetPenColor_command08
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0035-DrawRect_command09
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc		                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0035

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0036
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0036
//! @SYMAPI                 	CFbsDevice::SetScalingFactor(const TPoint{ref}, TInt, TInt, TInt, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Sets scaling factor by which the drawing device should scale the drawing images using TPoint(-100, -100).
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsBitGc object.
//!								3. Set brush style to ESolidBrush and clear the device.
//!								4. Set scaling factor to 10, 10, 1, 1 and scaling origin to TPoint(-100, -100).
//!								5. Set brush and pen color to TRgb(0, 255, 255).
//!								6. Draw a rectangle TRect(0, 0, 20, 20) and check it.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetScalingFactor() will be called successfully.
//!								2. The rectangle is in color TRgb(0, 255, 255).
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-SetScalingFactor_command03
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-CreateContext_command04
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-SetBrushColor_command06
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-SetBrushStyle_command07
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-SetPenColor_command08
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-DrawRect_command09
        COMMAND            	fbsScrDev			            checkRectColor                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0036-checkRectColor_command10
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc		                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0036

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0037
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0037
//! @SYMAPI                 	CFbsDevice::SetScalingFactor(const TPoint{ref}, TInt, TInt, TInt, TInt)
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	09/02/2009
//! @SYMTestCaseDesc        	Negative case. Sets scaling factor by which the drawing device should scale the drawing images using TPoint(9100, 9100).
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CFbsBitGc object.
//!								3. Set brush style to ESolidBrush and clear the device.
//!								4. Set scaling factor to 10, 10, 1, 1 and scaling origin to TPoint(9100, 9100).
//!								5. Set brush and pen color to TRgb(0, 255, 255).
//!								6. Draw a rectangle TRect(0, 0, 100, 100).
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetScalingFactor() will be called successfully.
//!								2. The scaled rectangle will not be drawn.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-SetScalingFactor_command03
        COMMAND            	fbsScrDev                       CreateContext                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-CreateContext_command04
        COMMAND            	fbsBitGc		                Clear
        COMMAND            	fbsBitGc		                SetBrushColor                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-SetBrushColor_command06
        COMMAND            	fbsBitGc		                SetBrushStyle                           GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-SetBrushStyle_command07
        COMMAND            	fbsBitGc		                SetPenColor                             GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-SetPenColor_command08
        COMMAND            	fbsBitGc		                DrawRect                                GRAPHICS-BITGDI-FbsDevice-PublicApi-0037-DrawRect_command09
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND            	fbsBitGc		                ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0037

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0038
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0038
//! @SYMAPI                 	CFbsDevice::GetDrawRect(TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Gets logical coordinates of the drawing rectangle.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Get draw rectangle.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	GetDrawRect() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0038-NewL_command02
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0038

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0039
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0039
//! @SYMAPI                 	CFbsDevice::GetDrawRect(TRect{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Gets logical coordinates of the drawing rectangle of a scaled device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object.
//!								3. Set scaling factor to 10, 10, 1, 1 and scaling origin to TPoint(5, 5).
//!								4. Get draw rectangle.
//!								5. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	GetDrawRect() will be called successfully.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0039-NewL_command02
        COMMAND            	fbsScrDev                       SetScalingFactor                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0039-SetScalingFactor_command03
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0039

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0040
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0040
//! @SYMAPI                 	CFbsDevice::RegisterLinkedTypeface(const CLinkedTypefaceSpecification{ref},TInt{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Add a CLinkedTypefaceSpecification to the font and bitmap server typeface store.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and a CLinkedTypefaceSpecification object.
//!								3. Register the CLinkedTypefaceSpecification object.
//!								4. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	RegisterLinkedTypeface() returns -5 KErrNotSupported.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CLinkedTypefaceSpecification    linkedTypefaceSpec
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0040-NewL_command02
        COMMAND      	    linkedTypefaceSpec              NewL                                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0040-NewLC_command03
        COMMAND !Error=-5   fbsScrDev                       RegisterLinkedTypeface                      GRAPHICS-BITGDI-FbsDevice-PublicApi-0040-RegisterLinkedTypeface_command04
        COMMAND            	fbsScrDev			            ~
        COMMAND      	    linkedTypefaceSpec              ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0040

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0041
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0041
//! @SYMAPI                 	CFbsDevice::SetDrawDeviceOffset(const TPoint{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Set the offset of draw device.
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and then create a CFbsBitGc object through CFbsScreenDevice object.
//!								3. Clear the device and set brush and pen color to TRgb(0, 255, 0) and brush style to ESolidBrush.
//!								4. Set offset of draw device to TPoint(50, 50).
//!								5. Draw a rectangle TRect(0, 0, 100, 100) and check it.
//!								6. Get draw rectangle.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetDrawDeviceOffset() will be called without error.
//!								2. TRect(0, 0, 100, 100) is in color TRgb(0, 255, 0).
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-CreateContext_command03
        COMMAND             fbsBitGc                        Clear
        COMMAND             fbsBitGc                        SetBrushColor                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-SetBrushColor_command05
        COMMAND             fbsBitGc                        SetBrushStyle                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-SetBrushStyle_command06
        COMMAND             fbsBitGc                        SetPenColor                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-SetPenColor_command07
        COMMAND            	fbsScrDev			            SetDrawDeviceOffset                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-SetDrawDeviceOffset_command08
        COMMAND             fbsBitGc                        DrawRect                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-DrawRect_command09
        COMMAND            	fbsScrDev			            checkRectColor                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0041-checkRectColor_command10
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND             fbsBitGc                        ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0041

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0042
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0042
//! @SYMAPI                 	CFbsDevice::SetDrawDeviceOffset(const TPoint{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Set the offset of draw device to TPoint(-50, -50).
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and then create a CFbsBitGc object through CFbsScreenDevice object.
//!								3. Clear the device and set brush and pen color to TRgb(0, 255, 0) and brush style to ESolidBrush.
//!								4. Set offset of draw device to TPoint(50, 50).
//!								5. Draw a rectangle TRect(0, 0, 100, 100) and check it.
//!								6. Get draw rectangle.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetDrawDeviceOffset() will be called without error.
//!								2. TRect(50, 50, 100, 100) is in color TRgb(0, 255, 0).
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-CreateContext_command03
        COMMAND             fbsBitGc                        Clear
        COMMAND             fbsBitGc                        SetBrushColor                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-SetBrushColor_command05
        COMMAND             fbsBitGc                        SetBrushStyle                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-SetBrushStyle_command06
        COMMAND             fbsBitGc                        SetPenColor                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-SetPenColor_command07
        COMMAND            	fbsScrDev			            SetDrawDeviceOffset                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-SetDrawDeviceOffset_command08
        COMMAND             fbsBitGc                        DrawRect                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-DrawRect_command09
        COMMAND            	fbsScrDev			            checkRectColor                              GRAPHICS-BITGDI-FbsDevice-PublicApi-0042-checkRectColor_command10
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            Update
        DELAY		        500000
        COMMAND            	fbsScrDev			            ~
        COMMAND             fbsBitGc                        ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0042

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0043
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0043
//! @SYMAPI                 	CFbsDevice::SetDrawDeviceOffset(const TPoint{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Set the offset of draw device to TPoint(-100, -100) and draw rectangle TRect(0, 0, 100, 100).
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and then create a CFbsBitGc object through CFbsScreenDevice object.
//!								3. Clear the device and set brush and pen color to TRgb(0, 255, 0) and brush style to ESolidBrush.
//!								4. Set offset of draw device to TPoint(-100, -100).
//!								5. Draw a rectangle TRect(0, 0, 100, 100).
//!								6. Get draw rectangle.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetDrawDeviceOffset() will be called without error.
//!								2. The rectangle will not be drawn.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-CreateContext_command03
        COMMAND             fbsBitGc                        Clear
        COMMAND             fbsBitGc                        SetBrushColor                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-SetBrushColor_command05
        COMMAND             fbsBitGc                        SetBrushStyle                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-SetBrushStyle_command06
        COMMAND             fbsBitGc                        SetPenColor                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-SetPenColor_command07
        COMMAND            	fbsScrDev			            SetDrawDeviceOffset                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-SetDrawDeviceOffset_command08
        COMMAND             fbsBitGc                        DrawRect                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0043-DrawRect_command09
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            ~
        COMMAND             fbsBitGc                        ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0043

START_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0044
//! @SYMTestCaseID          	GRAPHICS-BitGDI-FbsDevice-PublicApi-0044
//! @SYMAPI                 	CFbsDevice::SetDrawDeviceOffset(const TPoint{ref})
//! @SYMAuthor              	Felix Rao
//! @SYMCreationDate        	10/02/2009
//! @SYMTestCaseDesc        	Negative case. Set the offset of draw device to TPoint(9000, 9000) and draw rectangle TRect(0, 0, 100, 100).
//! @SYMTestActions         	1. Create and connect a RFbsSession object.
//!								2. Create a CFbsScreenDevice object and then create a CFbsBitGc object through CFbsScreenDevice object.
//!								3. Clear the device and set brush and pen color to TRgb(0, 255, 0) and brush style to ESolidBrush.
//!								4. Set offset of draw device to TPoint(9000, 9000).
//!								5. Draw a rectangle TRect(0, 0, 100, 100).
//!								6. Get draw rectangle.
//!								7. Destruct all objects and disconnect RFbsSession.
//! @SYMTestStatus          	Implemented
//! @SYMTestPriority        	High
//! @SYMTestExpectedResults 	1. SetDrawDeviceOffset() will be called without error.
//!								2. The rectangle will not be drawn.
//! @SYMTestType            	CIT

    START_TEST_BLOCK   		10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT      	RFbsSession 	 	            fbsSession
        CREATE_OBJECT      	CFbsScreenDevice                fbsScrDev
        CREATE_OBJECT      	CFbsBitGc                       fbsBitGc
        COMMAND				fbsSession	                    Connect
        COMMAND            	fbsScrDev                       NewL     		                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-NewL_command02
        COMMAND            	fbsScrDev                       CreateContext                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-CreateContext_command03
        COMMAND             fbsBitGc                        Clear
        COMMAND             fbsBitGc                        SetBrushColor                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-SetBrushColor_command05
        COMMAND             fbsBitGc                        SetBrushStyle                               GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-SetBrushStyle_command06
        COMMAND             fbsBitGc                        SetPenColor                                 GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-SetPenColor_command07
        COMMAND            	fbsScrDev			            SetDrawDeviceOffset                         GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-SetDrawDeviceOffset_command08
        COMMAND             fbsBitGc                        DrawRect                                    GRAPHICS-BITGDI-FbsDevice-PublicApi-0044-DrawRect_command09
        COMMAND            	fbsScrDev	                    GetDrawRect
        COMMAND            	fbsScrDev			            ~
        COMMAND             fbsBitGc                        ~
        COMMAND				fbsSession	                    Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BitGDI-FbsDevice-PublicApi-0044


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0201
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0201
//! @SYMAPI                 CFbsDevice::GetFontById(CFont{ptr}{ref}, TUid, const TAlgStyle{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Get font by a valid uid.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object and a TAlgStyle object.
//!                         3. Get font by uid and algstyle.
//!                         4. Check font height in pixels.
//!                         5. Release the font.
//!                         6. Destroy TAlgStyle object and CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetFontById returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             font
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0201-NewL_command02
        COMMAND             algstyle             new 
        COMMAND             fbsScrDev            GetFontById                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0201-GetFontById_command04
        COMMAND             font                 FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0201-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0201-ReleaseFont_command06
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0201


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0202
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0202
//! @SYMAPI                 CFbsDevice::GetFontById(CFbsFont{ptr}{ref}, TUid, const TAlgStyle{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Get font by a valid uid.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object and a TAlgStyle object.
//!                         3. Get font by uid and algstyle.
//!                         4. Check font height in pixels.
//!                         5. Release the font.
//!                         7. Destroy TAlgStyle object and CFbsScreenDevice object.
//!                         8. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetFontById returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0202-NewL_command02
        COMMAND             algstyle             new 
        COMMAND             fbsScrDev            GetFontById                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0202-GetFontById_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0202-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0202-ReleaseFont_command06
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0202


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0203
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0203
//! @SYMAPI                 CFbsDevice::GetFontById(CFont{ptr}{ref}, TUid, const TAlgStyle{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Get font by a invalid uid.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object and a TAlgStyle object.
//!                         3. Get font by uid and algstyle.
//!                         4. Check font height in pixels.
//!                         5. Release the font.
//!                         6. Destroy TAlgStyle object and CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults GetFontById returns KErrNotFound(-1).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             font
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0203-NewL_command02
        COMMAND             algstyle             new 
        COMMAND !Error=-1   fbsScrDev            GetFontById                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0203-GetFontById_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0203-ReleaseFont_command05
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0203


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0204
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0204
//! @SYMAPI                 CFbsDevice::GetFontById(CFbsFont{ptr}{ref}, TUid, const TAlgStyle{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Get font by a invalid uid.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object and a TAlgStyle object.
//!                         3. Get font by uid and algstyle.
//!                         4. Check font height in pixels.
//!                         5. Release the font.
//!                         6. Destroy TAlgStyle object and CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults GetFontById returns KErrNotFound(-1).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0204-NewL_command02
        COMMAND             algstyle             new 
        COMMAND !Error=-1   fbsScrDev            GetFontById                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0204-GetFontById_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0204-ReleaseFont_command05
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0204


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0211
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0211
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Get the font which most closely matches TFontSpec(DejaVu Sans Mono, 30).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification.
//!                         4. Check font maximum height in pixels.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInPixels returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0211-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0211-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0211-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0211-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0211


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0212
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0212
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the font specification with null typeface name.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with null name.
//!                         4. Check font maximum height in pixels.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInPixels returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0212-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0212-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0212-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0212-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0212


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0213
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0213
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        04/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the specified font with large, 0, negetive font height.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with height 999999.
//!                         4. Check font maximum height in pixels.
//!                         5. Get font by font specification with height 0.
//!                         6. Check font maximum height in pixels.
//!                         7. Get font by font specification with height -1.
//!                         8. Check font maximum height in pixels.
//!                         9. Release the font.
//!                         10.Destroy CFbsScreenDevice object.
//!                         11.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInPixels returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-FontMaxHeight_command05
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-FontMaxHeight_command07
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-GetNearestFontToDesignHeightInPixels_command08
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-FontMaxHeight_command09
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0213-ReleaseFont_command10
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0213


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0214
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0214
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Get the font which most closely matches TFontSpec(DejaVu Sans Mono, 500).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification.
//!                         4. Check font name and height in twips.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInTwips returns KErrNone(0).
//!                         2. Both font name and height are expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0214-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInTwips    GRAPHICS-BITGDI-FbsDevice-PublicApi-0214-GetNearestFontToDesignHeightInTwips_command04
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0214-FontSpecInTwips_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0214-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0214


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0215
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0215
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the font specification with null typeface name.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with null name.
//!                         4. Check font name and font height in twips..
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInTwips returns KErrNone(0).
//!                         2. Both font name and height are expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0215-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInTwips    GRAPHICS-BITGDI-FbsDevice-PublicApi-0215-GetNearestFontToDesignHeightInTwips_command04
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0215-FontSpecInTwips_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0215-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0215


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0216
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0216
//! @SYMAPI                 CFbsDevice::GetNearestFontToDesignHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the specified font with large, 0, negetive font height.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with height 999999.
//!                         4. Check font height in twips.
//!                         5. Get font by font specification with height 0.
//!                         6. Check font height in twips.
//!                         7. Get font by font specification with height -1.
//!                         8. Check font height in twips.
//!                         9. Release the font.
//!                         10.Destroy CFbsScreenDevice object.
//!                         11.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToDesignHeightInTwips returns KErrNone(0).
//!                         2. Both font name and height are expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInTwips    GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-GetNearestFontToDesignHeightInTwips_command04
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-FontSpecInTwips_command05
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInTwips    GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-GetNearestFontToDesignHeightInTwips_command06
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-FontSpecInTwips_command07
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInTwips    GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-GetNearestFontToDesignHeightInTwips_command08
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-FontSpecInTwips_command09
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0216-ReleaseFont_command10
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0216


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0221
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0221
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Get the font which most closely matches TFontSpec(DejaVu Sans Mono, 0) and maximum height 30.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification.
//!                         4. Check font maximum height in pixels.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession..
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInPixels returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0221-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInPixels      GRAPHICS-BITGDI-FbsDevice-PublicApi-0221-GetNearestFontToMaxHeightInPixels_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0221-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0221-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0221


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0222
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0222
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches TFontSpec(NULL, 0) and maximum height 30.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with null name.
//!                         4. Check font maximum height in pixels.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInPixels returns KErrNone(0).
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0222-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInPixels      GRAPHICS-BITGDI-FbsDevice-PublicApi-0222-GetNearestFontToMaxHeightInPixels_command04
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0222-FontMaxHeight_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0222-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0222


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0223
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0223
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInPixels(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the specified font with large, 0, negetive maximum height.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with maximum height 999999.
//!                         4. Get font by font specification with maximum height 0.
//!                         5. Check font maximum height in pixels.
//!                         6. Release the font.
//!                         7. Destroy CFbsScreenDevice object.
//!                         8. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInPixels returns KErrTooBig(-40), KErrNone(0), 
//!                         2. FontMaxHeight returns expected value.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0223-NewL_command02
        COMMAND !Error=-40  fbsScrDev            GetNearestFontToMaxHeightInPixels      GRAPHICS-BITGDI-FbsDevice-PublicApi-0223-GetNearestFontToMaxHeightInPixels_command04
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInPixels      GRAPHICS-BITGDI-FbsDevice-PublicApi-0223-GetNearestFontToMaxHeightInPixels_command06
        COMMAND             fbsFont              FontMaxHeight                          GRAPHICS-BITGDI-FbsDevice-PublicApi-0223-FontMaxHeight_command07
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0223-ReleaseFont_command08
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0223


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0224
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0224
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Get the font which most closely matches TFontSpec(DejaVu Sans Mono, 0) and maximum height 500.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification.
//!                         4. Check font name and height in twips.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInTwips returns KErrNone(0).
//!                         2. Both font name and height are expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0224-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInTwips       GRAPHICS-BITGDI-FbsDevice-PublicApi-0224-GetNearestFontToMaxHeightInTwips_command04
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0224-FontSpecInTwips_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0224-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0224


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0225
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0225
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches TFontSpec(NULL, 500) and maximum height 500.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with null name.
//!                         4. Check font name and font height in twips..
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInTwips returns KErrNone(0).
//!                         2. Both font name and height are expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0225-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInTwips       GRAPHICS-BITGDI-FbsDevice-PublicApi-0225-GetNearestFontToMaxHeightInTwips_command04
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0225-FontSpecInTwips_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0225-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0225


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0226
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0226
//! @SYMAPI                 CFbsDevice::GetNearestFontToMaxHeightInTwips(CFbsFont{ptr}{ref}, const TFontSpec{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        06/02/2009
//! @SYMTestCaseDesc        Negative case; Get the font which most closely matches the specified font with large, 0, negetive maximun height.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font by font specification with height 999999.
//!                         4. Check font height in twips.
//!                         5. Get font by font specification with height 0.
//!                         6. Check font height in twips.
//!                         7. Get font by font specification with height -1.
//!                         8. Check font height in twips.
//!                         9. Release the font.
//!                         10.Destroy CFbsScreenDevice object.
//!                         11.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. GetNearestFontToMaxHeightInTwips returns KErrTooBig(-40), KErrNone(0), KErrNone(0),.
//!                         2. Both font name and height are expected..
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-NewL_command02
        COMMAND !Error=-40  fbsScrDev            GetNearestFontToMaxHeightInTwips       GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-GetNearestFontToMaxHeightInTwips_command04
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInTwips       GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-GetNearestFontToMaxHeightInTwips_command06
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-FontSpecInTwips_command07
        COMMAND             fbsScrDev            GetNearestFontToMaxHeightInTwips       GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-GetNearestFontToMaxHeightInTwips_command08
        COMMAND             fbsFont              FontSpecInTwips                        GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-FontSpecInTwips_command09
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0226-ReleaseFont_command10
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0226



START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0231
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0231
//! @SYMAPI                 CFbsDevice::FontHeightInPixels(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Get font height in pixels with typeface index 0 and height index 0.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height of the specified font and check it.
//!                         4. Release the font.
//!                         5. Destroy CFbsScreenDevice object.
//!                         6. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FontHeightInPixels returns as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0231-NewL_command02
        COMMAND             fbsScrDev            FontHeightInPixels                     GRAPHICS-BITGDI-FbsDevice-PublicApi-0231-FontHeightInPixels_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0231-ReleaseFont_command05
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0231


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0232
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0232
//! @SYMAPI                 CFbsDevice::FontHeightInPixels(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Negative case; Get font height in pixels with large typeface index.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height with (999, 0).
//!                         4. Release the font.
//!                         5. Destroy CFbsScreenDevice object.
//!                         6. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FontHeightInPixels returns 0.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0232-NewL_command02
        COMMAND             fbsScrDev            FontHeightInPixels                     GRAPHICS-BITGDI-FbsDevice-PublicApi-0232-FontHeightInPixels_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0232-ReleaseFont_command05
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0232


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0233
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0233
//! @SYMAPI                 CFbsDevice::FontHeightInPixels(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Negative case; Get font height in pixels with large and negative height index.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height with (0, 999) and check it.
//!                         4. Get font height with (0, -1) and check it.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Two FontHeightInPixels returns as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0233-NewL_command02
        COMMAND             fbsScrDev            FontHeightInPixels                     GRAPHICS-BITGDI-FbsDevice-PublicApi-0233-FontHeightInPixels_command04
        COMMAND             fbsScrDev            FontHeightInPixels                     GRAPHICS-BITGDI-FbsDevice-PublicApi-0233-FontHeightInPixels_command05
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0233-ReleaseFont_command06
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0233


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0234
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0234
//! @SYMAPI                 CFbsDevice::FontHeightInTwips(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Get font height in twips with typeface index 0 and height index 0.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height of the specified font and check it.
//!                         4. Release the font.
//!                         5. Destroy CFbsScreenDevice object.
//!                         6. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FontHeightInTwips returns as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0234-NewL_command02
        COMMAND             fbsScrDev            FontHeightInTwips                      GRAPHICS-BITGDI-FbsDevice-PublicApi-0234-FontHeightInTwips_command03
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0234-ReleaseFont_command04
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0234


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0235
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0235
//! @SYMAPI                 CFbsDevice::FontHeightInTwips(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Negative case; Get font height in twips with large typeface index.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height with (999, 0).
//!                         4. Release the font.
//!                         5. Destroy CFbsScreenDevice object.
//!                         6. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FontHeightInTwips returns 0.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0235-NewL_command02
        COMMAND             fbsScrDev            FontHeightInTwips                      GRAPHICS-BITGDI-FbsDevice-PublicApi-0235-FontHeightInTwips_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0235-ReleaseFont_command05
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0235


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0236
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0236
//! @SYMAPI                 CFbsDevice::FontHeightInTwips(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Negative case; Get font height in twips with large and negative height index.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get font height with (0, 999) and check it.
//!                         4. Get font height with (0, -1) and check it.
//!                         5. Release the font.
//!                         6. Destroy CFbsScreenDevice object.
//!                         7. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Two FontHeightInTwips returns as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0236-NewL_command02
        COMMAND             fbsScrDev            FontHeightInTwips                      GRAPHICS-BITGDI-FbsDevice-PublicApi-0236-FontHeightInTwips_command03
        COMMAND             fbsScrDev            FontHeightInTwips                      GRAPHICS-BITGDI-FbsDevice-PublicApi-0236-FontHeightInTwips_command04
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0236-ReleaseFont_command05
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0236


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0241
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0241
//! @SYMAPI                 CFbsDevice::ReleaseFont(CFont{ptr});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Get a font and release the font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Get a font.
//!                         4. Release the font.
//!                         5. Destroy CFbsScreenDevice object.
//!                         6. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults ReleaseFont is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             font
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0241-NewL_command02
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsDevice-PublicApi-0241-GetNearestFontToDesignHeightInPixels_command03
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0241-ReleaseFont_command04
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0241


START_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0242
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsDevice-PublicApi-0242
//! @SYMAPI                 CFbsDevice::ReleaseFont(CFont{ptr});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        10/02/2009
//! @SYMTestCaseDesc        Negative case; Release a null font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Release the font.
//!                         4. Destroy CFbsScreenDevice object.
//!                         5. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults ReleaseFont is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi \graphics\GRAPHICS-BITGDI-FbsDevice-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsFont             font
        CREATE_OBJECT       TAlgStyle            algstyle
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsDevice-PublicApi-0242-NewL_command02
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsDevice-PublicApi-0242-ReleaseFont_command03
        COMMAND             algstyle             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsDevice-PublicApi-0242

