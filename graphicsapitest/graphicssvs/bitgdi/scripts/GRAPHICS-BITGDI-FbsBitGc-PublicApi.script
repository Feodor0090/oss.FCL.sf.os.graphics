//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName  GRAPHICS-BITGDI-FbsBitGc-PublicApi
//! @SYMScriptTestEnvironment This test script requires a basic ROM.

///////////////////////////////////////////////////////////////////////////////
// GRAPHICS-BITGDI-FbsBitGc-PublicApi.script
//
// Tests all public elements of the CFbsBitGc class
// as a means of confidence that the API works as expected.
//
// The purpose is to provide a regression test suite of PublishedAll APIs for CFbsBitGc.
// Negative testing is performed to confirm that correct errors are returned
// when incorrect parameters are given.
//
// The tests are fully automated.
///////////////////////////////////////////////////////////////////////////////


LOAD_SUITE      T_GraphicsBitgdiApi
DELAY           1000

// ****************************************************************************
// CFbsBitGc class
// ****************************************************************************

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0001
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0001
//! @SYMAPI                 CFbsBitGc::NewL()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Create a CFbsBitGc object by NewL().
//! @SYMTestActions         Create a CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be created without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0001

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0002
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0002
//! @SYMAPI                 CFbsBitGc::~CFbsBitGc()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Create and destruct a CFbsBitGc
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Destruct CFbsBitGc.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be destructed without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0002

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0003
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0003
//! @SYMAPI                 CFbsBitGc::Activate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Activate a CFbsBitGc to draw to a graphic device.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be activated to draw to CFbsScreenDevice without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0003-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0003-Activate_command04
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0003

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004
//! @SYMAPI                 CFbsBitGc::Activate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Activate a CFbsBitGc, which is already activated, to draw to graphic device.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activated the CFbsBitGc object to draw to the CFbsScreenDevice object twice.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be associated with CFbsScreenDevice.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004-Activate_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004-Activate_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0004

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0005
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0005
//! @SYMAPI                 CFbsBitGc::Activate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Activate a CFbsBitGc to draw to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Activated the CFbsBitGc object to draw to invalid CFbsScreenDevice object.
//!                         3. Destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be activated without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0005-Activate_command02
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0005

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0006
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0006
//! @SYMAPI                 CFbsBitGc::ActivateNoJustAutoUpdate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Activate a CFbsBitGc to draw to a graphic device.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be activated to draw to CFbsScreenDevice without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0006-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0006-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0006

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007
//! @SYMAPI                 CFbsBitGc::ActivateNoJustAutoUpdate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Negative case. Activate a CFbsBitGc to draw to a graphic device twice.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object twice.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be activated to draw to CFbsScreenDevice.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007-ActivateNoJustAutoUpdate_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0007

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0008
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0008
//! @SYMAPI                 CFbsBitGc::ActivateNoJustAutoUpdate(CFbsDevice{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Negative case. Activate a CFbsBitGc to draw to an invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         3. Destruct the CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CFbsBitGc object can be activated without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0008-ActivateNoJustAutoUpdate_command02
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0008

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Set clipping region of second CFbsBitGc object to TRect(50, 50, 90, 90) area.
//!                         7. Draw on second CFbsBitGc object from first CFbsBitGc object.
//!                         8. Check the rectangle drawn by second CFbsBitGc object.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw from first CFbsBitGc object without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn in pen in color TRgb(0, 0, 0) with brush TRgb(255, 0, 0).
//!                         4. Check the drawn rectangle.
//!                            Check pixel1~pixel4 outside the drawn rectangle area.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-Activate_command07
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-SetBrushColor_command09
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-SetBrushStyle_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-SetPenColor_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-DrawRect_command12
        COMMAND             fbsBitGc2            SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-SetClippingRegion_command13
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-BitBlt_command14
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-checkRectColor_command15
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011-checkPixels_command16
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0011

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negative case. Draw from another CFbsBitGc object using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the first CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Set clipping region of second CFbsBitGc object to TRect(50, 50, 90, 90) area.
//!                         7. Draw on second CFbsBitGc object from first CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Cannot draw from another CFbsBitGc object. Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-Activate_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-SetBrushColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-SetPenColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-DrawRect_command09
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012-BitBlt_command10
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0012

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Draw a rectangle from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Draw a rectangle (0, 0, 80, 80) area on second CFbsBitGc object from first CFbsBitGc object.
//!                         7. Check the rectangle drawn by second CFbsBitGc object.
//!                         8. Check some pixels outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw from first CFbsBitGc object without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn in pen in color TRgb(0, 0, 0) with brush TRgb(255, 0, 0).
//!                         4. Check the drawn rectangle.
//!                            Check pixel1~pixel4 outside the drawn rectangle area.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-Activate_command07
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-SetBrushColor_command09
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-SetBrushStyle_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-SetPenColor_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-DrawRect_command12
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-BitBlt_command13
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-checkRectColor_command14
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013-checkPixels_command15
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0013

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an empty rectangle from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Draw a rectangle (0, 0, 0, 0) area on second CFbsBitGc object from first CFbsBitGc object.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-Activate_command05
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-Activate_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-SetBrushColor_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-DrawRect_command10
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014-BitBlt_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0014

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle from another CFbsBitGc object which is not activated.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the second CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 100, 100) area on second CFbsBitGc object from first CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn. Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015-NewL_command04
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015-Activate_command05
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015-BitBlt_command06
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0015

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle area (8000, 8000, 8010, 8010) from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Draw a rectangle (8000, 8000, 8010, 8010) area on second CFbsBitGc object from first CFbsBitGc object.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-Activate_command05
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-Activate_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-SetBrushColor_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-DrawRect_command10
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016-BitBlt_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0016

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle at point (8000, 8000) from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         6. Draw a rectangle (0, 0, 40, 40) area on second CFbsBitGc object from first CFbsBitGc object at point (8000, 8000).
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-Activate_command05
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-Activate_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-SetBrushColor_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-DrawRect_command10
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017-BitBlt_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0017

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitGc{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Draw a rectangle from another CFbsBitGc object with draw mode set to EDrawModeWriteAlpha.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the 2 CFbsBitGc objects to draw to the CFbsScreenDevice object.
//!                         5. Set draw mode to EDrawModeWriteAlpha to the 2nd CFbsBitGc object.
//!                         6. Draw a rectangle (0, 0, 40, 40) in color TRgb(255, 0, 0) with solid brush TRgb(255, 0, 0) with first CFbsBitGc object.
//!                         7. Draw a rectangle (0, 0, 40, 40) area on second CFbsBitGc object from first CFbsBitGc object at point (50, 50).
//!                         8. Check the rectangle drawn by second CFbsBitGc object.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw from first CFbsBitGc object without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn in pen in color TRgb(0, 0, 0) with brush TRgb(255, 0, 0).
//!                         4. Check the drawn rectangle.
//!                            Check pixel1~pixel4 outside the drawn rectangle area.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-Activate_command07
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-SetBrushColor_command09
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-SetBrushStyle_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-SetPenColor_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-DrawRect_command12
        COMMAND             fbsBitGc2            SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-SetClippingRegion_command13
        COMMAND             fbsBitGc2            SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-SetDrawMode_command14
        COMMAND             fbsBitGc2            BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-BitBlt_command15
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-checkRectColor_command16
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018-checkPixels_command17
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0018

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Draw a whole CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022-Load_command06
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022-BitBlt_command07
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0022

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a whole CFbsBitmap object using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn. Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023-NewL_command04
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023-Load_command05
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023-BitBlt_command06
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0023

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a null CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024-Activate_command04
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024-BitBlt_command05
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0024

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Draw a rectangle from CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026-Load_command06
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026-BitBlt_command07
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0026

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle from a not loaded CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027-Activate_command05
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027-BitBlt_command06
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0027

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an empty rectangle from CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028-Load_command06
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028-BitBlt_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0028

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle area of a bitmap which is not inside the bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029-Load_command06
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029-BitBlt_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0029

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle area of a bitmap to an area starting from TPoint(8000, 8000).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load a bitmap to CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030-Load_command06
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030-BitBlt_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0030


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle area of a bitmap to an area which doesnt intersect with clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set clipping rectangle (8000, 8000, 8005, 8005).
//!                         6. Load a bitmap to CFbsBitmap object.
//!                         7. Draw the bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031-Activate_command05
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031-SetClippingRect_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031-Load_command07
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031-BitBlt_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0031

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0032
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0032
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle area of a bitmap using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Load a bitmap to CFbsBitmap object.
//!                         5. Draw the bitmap.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0032-Load_command04
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0032-BitBlt_command05
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0032

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033
//! @SYMAPI                 CFbsBitGc::BitBlt(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        30/12/2008
//! @SYMTestCaseDesc        Draw a bitmap and compare the destination rectangle with another rectangle which is the same to the destination rectangle before draw.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Create and connect a RWsSession object.
//!                         6. Create a CWsScreenDevice object and construct it with the same screen number to CFbsScreenDevice object.
//!                         7. Set clipping rectangle of CFbsBitGc object and compare the rectangle right to it.
//!                         8. Load the bitmap.
//!                         9. Draw the bitmap.
//!                         10. Compare the destination rectangle with the rectangle right to it.
//!                         11. Disconnect RFbsSession, close RWsSession. Destruct CFbsBitGc object, CFbsScreenDevice object, CWsScreenDevice object, and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn. And the two rectangles are the same before draw. After draw, they are different.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CWsScreenDevice      wsScrDev
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             wsScrDev             new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-new_command09
        COMMAND             wsScrDev             Construct                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-Construct_command10
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-RectCompare_command11
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-Load_command12
        COMMAND             fbsBitGc             BitBlt                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-BitBlt_command13
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033-RectCompare_command14
        COMMAND             wsScrDev             ~
        COMMAND             wsSession            Close
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0033

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Performs a masked bitmap block transfer.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042-Load_command08
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042-BitBltMasked_command09
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0042

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer from a null src bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load bitmap to mask CFbsBitmap object.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043-Activate_command05
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043-Load_command06
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043-BitBltMasked_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0043

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer from a not loaded src bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load bitmap to mask CFbsBitmap object.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044-Activate_command06
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044-Load_command07
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044-BitBltMasked_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0044

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer with a null mask bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load bitmap to src CFbsBitmap object.
//!                         6. Draw the bitmap with null mask bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045-Load_command06
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045-BitBltMasked_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0045

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer with a not loaded mask bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load bitmap to src CFbsBitmap object.
//!                         6. Draw the bitmap with not loaded mask.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046-Load_command07
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046-BitBltMasked_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0046

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer from an empty rectangle area of source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047-Load_command08
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047-BitBltMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0047

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer from rectangle area (-1000, -1000, -990, -990)of source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048-Load_command08
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048-BitBltMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0048

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Performs a masked bitmap block transfer to rectangle area starting from point (-9000, -9000).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049-Load_command08
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049-BitBltMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0049

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Performs a masked bitmap block transfer with src same to mask bitmap
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load bitmap to the CFbsBitmap object.
//!                         6. Draw the bitmap.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050-Load_command06
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050-BitBltMasked_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0050

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Performs a masked bitmap block transfer with mask bitmap resize to TSize(10, 8000).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmap.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-Load_command08
        COMMAND             fbsMaskBitmap        Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-Resize_command09
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051-BitBltMasked_command10
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0051

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052
//! @SYMAPI                 CFbsBitGc::BitBltMasked(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Performs a masked bitmap block transfer with mask bitmap resize to TSize(8000, 10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmap.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-Load_command08
        COMMAND             fbsMaskBitmap        Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-Resize_command09
        COMMAND             fbsBitGc             BitBltMasked                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052-BitBltMasked_command10
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0052

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091
//! @SYMAPI                 CFbsBitGc::CancelClipping()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Cancel clipping rectangle and region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Set clipping rectangle to rectangle (10, 10, 30, 30) area.
//!                         5. Set clipping region to rectangle (30, 30, 50, 50) area.
//!                         6. Cancel clipping.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CancelClipping can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091-Activate_command04
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091-SetClippingRect_command05
        COMMAND             fbsBitGc             SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091-SetClippingRegion_command06
        COMMAND             fbsBitGc             CancelClipping
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0091

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0092
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0092
//! @SYMAPI                 CFbsBitGc::CancelClippingRect()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Cancel clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Cancel clipping rectangle.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CancelClippingRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0092-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0092-Activate_command04
        COMMAND             fbsBitGc             CancelClippingRect
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0092

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0093
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0093
//! @SYMAPI                 CFbsBitGc::CancelClippingRect()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Cancel clipping rectangle using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Cancel clipping rectangle.
//!                         3. Destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CancelClippingRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             CancelClippingRect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0093

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0094
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0094
//! @SYMAPI                 CFbsBitGc::CancelClippingRegion()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Cancel clipping region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc to draw to CFbsScreenDevice object. Cancel clipping region.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CancelClippingRegion be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0094-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0094-Activate_command04
        COMMAND             fbsBitGc             CancelClippingRegion
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0094

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0095
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0095
//! @SYMAPI                 CFbsBitGc::CancelClippingRegion()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Cancel clipping region using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Cancel clipping region.
//!                         3. Destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CancelClippingRegion can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             CancelClippingRegion
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0095

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096
//! @SYMAPI                 CFbsBitGc::Clear()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Clear the whole device.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Clear the device with brush color TRgb(255, 0, 0).
//!                         6. Check some pixels.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The whole device is cleared.
//!                         2. Check pixel1~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096-checkPixels_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0096

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097
//! @SYMAPI                 CFbsBitGc::Clear()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Clear the whole device starting from point (0, 10)
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set origin point to (0, 10)
//!                         6. Clear the device with brush color TRgb(255, 0, 0).
//!                         7. Check some pixels.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The whole device is cleared, despite of start point.
//!                         2. Check pixel1~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097-SetBrushColor_command05
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097-SetOrigin_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097-checkPixels_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0097

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098
//! @SYMAPI                 CFbsBitGc::Clear()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Clear the whole device starting from point (10, 0)
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set origin point to (10, 0)
//!                         6. Clear the device with brush color TRgb(255, 0, 0).
//!                         7. Check some pixels.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The whole device is cleared, despite of start point.
//!                         2. Check pixel1~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098-SetBrushColor_command05
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098-SetOrigin_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098-checkPixels_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0098

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099
//! @SYMAPI                 CFbsBitGc::Clear(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Clear a rectangle area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         6. Clear the rectangle (0, 0, 100, 100) with brush color TRgb(255, 0, 0).
//!                         7. Check some pixels.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The whole device is cleared, despite of start point.
//!                         2. Check pixel1~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear                                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099-Clear_command06
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099-checkPixels_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0099

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100
//! @SYMAPI                 CFbsBitGc::Clear(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Clear an empty rectangle area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         6. Clear the rectangle (0, 0, 0, 0) with brush color TRgb(255, 0, 0).
//!                         7. Check some pixels.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults This case has no effect.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear                                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100-Clear_command06
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0100

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101
//! @SYMAPI                 CFbsBitGc::Clear(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Clear a rectangle area (8000, 8000, 8008, 8008).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Clear the rectangle (8000, 8000, 8008, 8008) with brush color TRgb(255, 0, 0).
//!                         6. Check some pixels.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults This case has no effect.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear                                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101-Clear_command06
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0101

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102
//! @SYMAPI                 CFbsBitGc::Clear(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Clear a rectangle area which doesnt intersect with clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set clipping rectangle (120, 120, 50, 50).
//!                         6. Clear the rectangle (0, 0, 100, 100) with brush color TRgb(255, 0, 0).
//!                         7. Check some pixels.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The Clear will have no effect.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-SetBrushColor_command05
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-SetClippingRect_command06
        COMMAND             fbsBitGc             Clear                                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-Clear_command07
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102-checkPixels_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0102

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103
//! @SYMAPI                 CFbsBitGc::CopyRect(const TPoint{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Copy a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Copy a rectangle (0, 0, 50, 50) with offset TPoint(10, 10)
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopyRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103-Activate_command04
        COMMAND             fbsBitGc             CopyRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103-CopyRect_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0103

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104
//! @SYMAPI                 CFbsBitGc::CopyRect(const TPoint{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Copy an empty rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Copy a rectangle (0, 0, 0, 0) with offset TPoint(10, 10)
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopyRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104-Activate_command04
        COMMAND             fbsBitGc             CopyRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104-CopyRect_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0104

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105
//! @SYMAPI                 CFbsBitGc::CopyRect(const TPoint{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Copy a rectangle with offset (0, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Copy a rectangle (0, 0, 50, 50) with offset TPoint(0, 0)
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopyRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105-Activate_command04
        COMMAND             fbsBitGc             CopyRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105-CopyRect_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0105

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106
//! @SYMAPI                 CFbsBitGc::CopyRect(const TPoint{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Copy a rectangle area (8000, 8000, 8050, 8050).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Copy a rectangle (8000, 8000, 8050, 8050) with offset TPoint(5, 5)
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopyRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106-Activate_command04
        COMMAND             fbsBitGc             CopyRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106-CopyRect_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0106

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107
//! @SYMAPI                 CFbsBitGc::CopyRect(const TPoint{ref}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negative case. Copy a rectangle which doesnt intersect with clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set clipping rectangle (10, 10, 30, 30).
//!                         6. Copy a rectangle (40, 40, 50, 50) with offset TPoint(5, 5)
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopyRect can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107-Activate_command04
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107-SetClippingRect_command05
        COMMAND             fbsBitGc             CopyRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107-CopyRect_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0107

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111
//! @SYMAPI                 CFbsBitGc::CopySettings(const CFbsBitGc{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Copy settings from another CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Copy settings from 2nd CFbsBitGc object to 1st CFbsBitGc object.
//!                         5. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopySettings can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111-NewL_command04
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111-Activate_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111-Activate_command06
        COMMAND             fbsBitGc             CopySettings                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111-CopySettings_command07
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0111

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112
//! @SYMAPI                 CFbsBitGc::CopySettings(const CFbsBitGc{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Copy settings from another CFbsBitGc object which has font set.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects and CFbsTypefaceStore object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Set font to 2nd CFbsBitGc object.
//!                         5. Copy settings from 2nd CFbsBitGc object to 1st CFbsBitGc object.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopySettings can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        CREATE_OBJECT       CFbsFont             fbsFont
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-NewL_command05
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-Activate_command06
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc2            UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-UseFont_command08
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-Activate_command09
        COMMAND             fbsBitGc             CopySettings                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112-CopySettings_command10
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0112

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113
//! @SYMAPI                 CFbsBitGc::CopySettings(const CFbsBitGc{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Copy settings from another CFbsBitGc object which has brush pattern set.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create 2 CFbsBitGc objects and CFbsBitmap object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Set font to 2nd CFbsBitGc object.
//!                         5. Copy settings from 2nd CFbsBitGc object to 1st CFbsBitGc object.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc objects and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults CopySettings can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
       	CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
       	COMMAND             fbsBitmap            new
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-NewL_command05
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-Load_command07
        COMMAND             fbsBitGc2            UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-UseBrushPattern_command08
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-Activate_command09
        COMMAND             fbsBitGc             CopySettings                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113-CopySettings_command10
       	COMMAND             fbsBitmap            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0113

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0114
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0114
//! @SYMAPI                 CFbsBitGc::Device()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Get the graphics device currently being drawn to by a CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Get the device.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Device can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0114-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0114-Activate_command04
        COMMAND             fbsBitGc             Device
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0114

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0115
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0115
//! @SYMAPI                 CFbsBitGc::Device()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Get the graphics device currently being drawn to using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Get the device.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Device can be called successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Device
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0115

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116
//! @SYMAPI                 CFbsBitGc::DiscardBrushPattern()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Discards a non-built-in brush pattern.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Sets the brush pattern to the CFbsBitmap object.
//!                         5. Test if brush pattern is used.
//!                         6. Discard brush pattern and test if brush pattern is used.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DiscardBrushPattern() is called without error. Before this call, IsBrushPatternUsed() returns true, and returns false after this call.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116-Load_command04
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116-UseBrushPattern_command05
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116-IsBrushPatternUsed_command06
        COMMAND             fbsBitGc             DiscardBrushPattern
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116-IsBrushPatternUsed_command08
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0116

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0117
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0117
//! @SYMAPI                 CFbsBitGc::DiscardBrushPattern()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Discards a non-built-in brush pattern without using any brush pattern.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Discard brush pattern.
//!                         4. Disconnect RFbsSession and destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DiscardBrushPattern() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DiscardBrushPattern
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0117

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0118
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0118
//! @SYMAPI                 CFbsBitGc::DiscardBrushPattern()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Discards a non-built-in brush pattern when brush style set to ESolidBrush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Sets the brush style to ESolidBrush.
//!                         4. Discard brush pattern.
//!                         4. Disconnect RFbsSession and destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DiscardBrushPattern() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0118-SetBrushStyle_command03
        COMMAND             fbsBitGc             DiscardBrushPattern
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0118

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119
//! @SYMAPI                 CFbsBitGc::DiscardFont()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Discards a selected device font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Discard font and test if font is used.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DiscardFont() is called without error. Before this call, IsFontUsed() returns true, and returns false after this call.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119-UseFont_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119-IsFontUsed_command06
        COMMAND             fbsBitGc             DiscardFont
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119-IsFontUsed_command08
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119-ReleaseFont_command09
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0119

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0120
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0120
//! @SYMAPI                 CFbsBitGc::DiscardFont()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Discards a selected device font using a CFbsBitGc object which does not select any device font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Discard font.
//!                         4. Disconnect RFbsSession and destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DiscardFont() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DiscardFont
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0120

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw an arc in a rectangle(0, 0, 100, 200) area from start point to end point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw the arc in default color TRgb(0, 0, 0).
//!                         7. Check pixels on the arc.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw an arc without error.
//!                         2. The drawing result is as expected.
//!                         3. The arc is drawn in pen in color TRgb(0, 0, 0).
//!                            Only check sample points pixel1~pixel5 specified in test data on the arc.
//!                         4. The adjacent points of above points are not drawn so that they are in color TRgb(255, 255, 255).
//!                            Only check sample points pixel6~pixel10 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121-DrawArc_command07
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121-checkPixels_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0121

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 0, 0) area from start point to end point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw the arc in default color TRgb(0, 0, 0).
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The arc will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122-DrawArc_command07
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0122

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 100, 200) area with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen style to null pen.
//!                         6. Draw the arc.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The arc will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123-SetPenStyle_command07
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123-DrawArc_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0123

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 100, 200) area with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(0, 1).
//!                         7. Draw the arc.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The arc will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124-SetPenSize_command07
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124-DrawArc_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0124

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 100, 200) area with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(1, 0).
//!                         7. Draw the arc.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The arc will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125-SetPenSize_command07
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125-DrawArc_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0125

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(1000, 1000, 8000, 8000) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw the arc.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The arc will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126-SetBrushColor_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126-DrawArc_command07
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0126

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0128
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0128
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 100, 200) area from start point to end point,
//!                         without activating the graphic context.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Draw the arc
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0128-DrawArc_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0128

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0129
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0129
//! @SYMAPI                 CFbsBitGc::DrawArc(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an arc in a rectangle(0, 0, 100, 200) area from start point to end point,
//!                         using a graphic context activated to draw to an invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         3. Draw the arc.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0129-Activate_command02
        COMMAND             fbsBitGc             DrawArc                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0129-DrawArc_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0129

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Draw a pie in a rectangle(0, 0, 100, 200) area from start point to end point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen and brush color to draw and fill the pie in color TRgb(255, 0, 0).
//!                         7. Draw the pie.
//!                         8. Check pixels in the pie, on the border of the pie, and outside the pie.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a pie without error.
//!                         2. The drawing result is as expected.
//!                         3. The pie is drawn and filled with color TRgb(255, 0, 0).
//!                            Check the border of pie. Pick sample points pixel1~pixel10 specified in test data.
//!                            Inside the pie, check sample points pixel11~pixel14 specified in test data.
//!                         4. Nothing is drawn outside the pie, in color TRgb(255, 255, 255).
//!                            Only check sample points pixel15~pixel17 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-DrawPie_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0130

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a pie in a rectangle(0, 0, 100, 200) area from start point to start point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen and brush color to draw and fill the pie in color TRgb(255, 0, 0).
//!                         7. Draw the pie.
//!                         8. Check pixels in the pie, on the border of the pie, and outside the pie.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a pie without error.
//!                         2. The drawing result is as expected.
//!                         3. The pie is drawn and filled with color TRgb(255, 0, 0).
//!                            Check the border of pie. Pick sample points pixel1~pixel10 specified in test data.
//!                            Inside the pie, check sample points pixel11~pixel14 specified in test data.
//!                         4. Nothing is drawn outside the pie, in color TRgb(255, 255, 255).
//!                            Only check sample points pixel15~pixel17 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-DrawPie_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0131

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 100, 200) area with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen style to null pen.
//!                         7. Draw the pie.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-SetPenStyle_command08
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132-DrawPie_command09
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0132

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 100, 200) area with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(0, 1).
//!                         7. Draw the pie.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133-DrawPie_command09
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0133

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 100, 200) area with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(1, 0).
//!                         7. Draw the pie.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134-DrawPie_command09
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0134

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 0, 0) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(1, 0).
//!                         7. Draw the pie.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135-DrawPie_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0135

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(1000, 1000, 8000, 8000) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw the pie.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136-DrawPie_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0136

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Draw a pie in a rectangle(0, 0, 100, 200) area from start point to end point, filled with null brush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen color to draw in color TRgb(255, 0, 0), and set the to null brush.
//!                         7. Draw the pie.
//!                         8. Check pixels in the pie, on the border of the pie, and outside the pie.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a pie without error.
//!                         2. The drawing result is as expected.
//!                         3. The pie is drawn and filled with color TRgb(255, 0, 0).
//!                            Check the border of pie. Pick sample points pixel1~pixel10 specified in test data.
//!                            Inside the pie, check sample points pixel11~pixel14 specified in test data.
//!                         4. Nothing is drawn outside the pie, in color TRgb(255, 255, 255).
//!                            Only check sample points pixel15~pixel17 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-DrawPie_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0137

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0138
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0138
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 100, 200) area from start point to end point to an invalid graphic device.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         4. Draw the pie.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0138-Activate_command02
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0138-DrawPie_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0138

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0139
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0139
//! @SYMAPI                 CFbsBitGc::DrawPie(const TRect{ref}, const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        03/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a pie in a rectangle(0, 0, 100, 200) area from start point to end point
//!                         using a non-activated graphic context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw the pie.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0139-DrawPie_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0139

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         7. Set size in twips of bitmap to TSize(1000, 1000).
//!                         8. Draw the bitmap.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151-Load_command06
        COMMAND             fbsBitmap            SetSizeInTwips                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151-SetSizeInTwips_command07
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151-DrawBitmap_command08
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0151

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap from null CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152-Activate_command04
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152-DrawBitmap_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0152

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0153
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0153
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Load the bitmap.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0153-Load_command03
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0153-DrawBitmap_command04
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0153

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a bitmap with size TSize(0, 10) in twips.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Set size in twips of bitmap to TSize(0, 10).
//!                         7. Draw the bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154-Load_command06
        COMMAND             fbsBitmap            SetSizeInTwips                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154-SetSizeInTwips_command07
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154-DrawBitmap_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0154

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a bitmap with size TSize(10, 0) in twips.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Set size in twips of bitmap to TSize(0, 10).
//!                         7. Draw the bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155-Load_command06
        COMMAND             fbsBitmap            SetSizeInTwips                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155-SetSizeInTwips_command07
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155-DrawBitmap_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0155

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Draw a bitmap which is not loaded.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156-Activate_command05
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156-DrawBitmap_command06
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0156

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a bitmap to fit rectangle (0, 0, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0157

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap to fit rectangle (0, 0, 0, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0158

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap to fit rectangle (0, 0, 100, 200) with a null CFbsBitmap object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159-Activate_command04
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159-DrawBitmap_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0159

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0160
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0160
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap to fit rectangle (0, 0, 100, 200) using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Load the bitmap
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn. Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0160-Load_command04
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0160-DrawBitmap_command05
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0160

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a bitmap which is not loaded
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161-Activate_command05
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161-DrawBitmap_command06
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0161

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw rectangle area (0, 0, 10, 10) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0162

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 0, 0) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0163

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of null bitmap object to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164-Activate_command04
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164-DrawBitmap_command05
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0164

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap which is not loaded to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw the bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165-Activate_command05
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165-DrawBitmap_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0165

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (-10, 0, 10, 10) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0166

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, -10, 10, 10) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0167

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 8000, 10) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0168

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 8000) of a source bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169-Load_command06
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169-DrawBitmap_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0169

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap to fit into rectangle area (8000, 8000, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170-Load_command06
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170-SetClippingRect_command07
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170-DrawBitmap_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0170

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        30/12/2008
//! @SYMTestCaseDesc        Draw a bitmap and compare the destination rectangle with another rectangle which is the same to the destination rectangle before draw.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Create and connect a RWsSession object.
//!                         6. Create a CWsScreenDevice object and construct it with the same screen number to CFbsScreenDevice object.
//!                         7. Set clipping rectangle of CFbsBitGc object and compare the rectangle right to it.
//!                         8. Load the bitmap.
//!                         9. Set size in pixels of bitmap to TSize(1000, 1000).
//!                         10. Draw the bitmap.
//!                         11. Compare the destination rectangle with the rectangle right to it.
//!                         12. Disconnect RFbsSession, close RWsSession. Destruct CFbsBitGc object, CFbsScreenDevice object, CWsScreenDevice object, and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn. And the two rectangles are the same before draw. After draw, they are different.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CWsScreenDevice      wsScrDev
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             wsScrDev             new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-new_command09
        COMMAND             wsScrDev             Construct                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-Construct_command10
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-SetClippingRect_command11
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-RectCompare_command12
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-Load_command13
        COMMAND             fbsBitmap            SetSizeInTwips                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-SetSizeInTwips_command14
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-DrawBitmap_command15
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171-RectCompare_command16
        COMMAND             wsScrDev             ~
        COMMAND             wsSession            Close
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0171

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172
//! @SYMAPI                 CFbsBitGc::DrawBitmap(const TPoint{ref}, const CFbsBitmap{ptr}, const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        30/12/2008
//! @SYMTestCaseDesc        Draw rectangle area (0, 0, 30, 30) of a source bitmap to fit into rectangle area (0, 0, 90, 90).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsBitmap object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Create and connect a RWsSession object.
//!                         6. Create a CWsScreenDevice object and construct it with the same screen number to CFbsScreenDevice object.
//!                         7. Load the bitmap.
//!                         8. Draw the bitmap.
//!                         9. Compare the destination rectangle with the rectangle right to it.
//!                         10. Disconnect RFbsSession, close RWsSession. Destruct CFbsBitGc object, CFbsScreenDevice object, CWsScreenDevice object, and CFbsBitmap object.
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn. And the two rectangles are the same before draw. After draw, they are different.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CWsScreenDevice      wsScrDev
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-Activate_command05
        COMMAND             fbsBitGc             Clear
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             wsScrDev             new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-new_command09
        COMMAND             wsScrDev             Construct                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-Construct_command10
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-RectCompare_command11
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-Load_command12
        COMMAND             fbsBitGc             DrawBitmap                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-DrawBitmap_command13
        COMMAND             wsScrDev             RectCompare                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172-RectCompare_command14
        COMMAND             wsScrDev             ~
        COMMAND             wsSession            Close
        COMMAND             fbsScrDev            Update
        DELAY		        500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0172

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0201

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a null bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load the mask bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202-Activate_command05
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202-Load_command06
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202-DrawBitmapMasked_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0202

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and a null mask bitmap to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203-NewL_command04
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203-Activate_command05
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203-Load_command06
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203-DrawBitmapMasked_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0203

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 0, 0) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0204

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (0, 0, 0, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0205

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap which is not loaded.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load mask bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206-Activate_command06
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206-Load_command07
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206-DrawBitmapMasked_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0206

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap using a not loaded mask bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src bitmap.
//!                         6. Draw the bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207-Load_command07
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207-DrawBitmapMasked_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0207

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (-10, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0208

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, -10, 10, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0209

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 8000, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0210

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 8000) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211-DrawBitmapMasked_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0211

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Set clipping rectangle (210, 110, 10, 10)
//!                         7. Draw the masked bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-Load_command08
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-SetClippingRect_command09
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212-DrawBitmapMasked_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0212

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask with mask bitmap resize to TSize(8000, 10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Set clipping rectangle (210, 110, 10, 10)
//!                         7. Draw the masked bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-Load_command08
        COMMAND             fbsMaskBitmap        Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-Resize_command09
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213-DrawBitmapMasked_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0213

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask with mask bitmap resize to TSize(10, 8000).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Set clipping rectangle (210, 110, 10, 10)
//!                         7. Draw the masked bitmap.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-Load_command08
        COMMAND             fbsMaskBitmap        Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-Resize_command09
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214-DrawBitmapMasked_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0214

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CWsBitmap{ptr}, const TRect{ref}, const CWsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (20, 20, 100, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object, 2 CWsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CWsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CWsBitmap            wsBitmap
        CREATE_OBJECT       CWsBitmap            wsMaskBitmap
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             wsBitmap             new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-new_command05
        COMMAND             wsMaskBitmap         new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-new_command06
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-NewL_command07
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-Activate_command08
        COMMAND             wsBitmap             Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-Load_command09
        COMMAND             wsMaskBitmap         Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-Load_command10
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252-DrawBitmapMasked_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             wsBitmap             ~
        COMMAND             wsMaskBitmap         ~
        COMMAND             wsSession            Close
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0252

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CWsBitmap{ptr}, const TRect{ref}, const CWsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negative case. Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (20, 20, 100, 100) using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object, 2 CWsBitmap objects.
//!                         4. Load src and mask bitmaps.
//!                         5. Draw the masked bitmap.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CWsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CWsBitmap            wsBitmap
        CREATE_OBJECT       CWsBitmap            wsMaskBitmap
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             wsBitmap             new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253-new_command05
        COMMAND             wsMaskBitmap         new                                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253-new_command06
        COMMAND             wsBitmap             Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253-Load_command07
        COMMAND             wsMaskBitmap         Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253-Load_command08
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253-DrawBitmapMasked_command09
        COMMAND             wsBitmap             ~
        COMMAND             wsMaskBitmap         ~
        COMMAND             wsSession            Close
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0253

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254
//! @SYMAPI                 CFbsBitGc::DrawBitmapMasked(const TRect{ref}, const CFbsBitmap{ptr}, const TRect{ref}, const CFbsBitmap{ptr}, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw rectangle area (0, 0, 10, 10) of a source bitmap and its mask to fit into rectangle area (10, 10, 200, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src and mask bitmaps.
//!                         6. Draw the masked bitmap with draw mode set to EDrawModeNOTPEN.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        CREATE_OBJECT       CFbsBitmap           fbsMaskBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsMaskBitmap        new
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-Activate_command06
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-Load_command07
        COMMAND             fbsMaskBitmap        Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-Load_command08
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-SetDrawMode_command09
        COMMAND             fbsBitGc             DrawBitmapMasked                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254-DrawBitmapMasked_command10
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsMaskBitmap        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0254

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        01/12/2008
//! @SYMTestCaseDesc        Draw a round rectangle
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the round rectangle.
//!                         7. Draw round rectangle.
//!                         8. Check the 2 rectangles, out most border of the 2 rectangles, and pixels inside & outside the round rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a round rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn and filled with color TRgb(0, 0, 255).
//!                            Check the 2 rectangles without rounded angle specified in test data.
//!                         4. Check the out most borders of the 2 intersected rectangles.
//!                         5. Inside the round rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the round rectangle, check sample points pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-checkRectColor_command11
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-checkLineColor_command12
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271-checkPixels_command13
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0271

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a rectangle because of TSize(0, 5).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the round rectangle.
//!                         7. Draw round rectangle.
//!                         8. Check the 2 rectangles, out most border of the 2 rectangles, and pixels inside & outside the round rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a round rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn and filled with color TRgb(0, 0, 255).
//!                            Check the rectangle.
//!                         4. Check the out most borders of rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel5 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-checkRectColor_command11
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-checkLineColor_command12
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272-checkPixels_command13
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0272

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a rectangle because of TSize(5, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the round rectangle.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle, out most border of the rectangle, and pixels inside & outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. The rectangle is drawn and filled with color TRgb(0, 0, 255).
//!                            Check the rectangle.
//!                         4. Check the out most borders of rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel5 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-checkRectColor_command11
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-checkLineColor_command12
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273-checkPixels_command13
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0273

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 150) area because TSize(160, 110), which is bigger than rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the ellipse.
//!                         7. Draw ellipse.
//!                         8. Check the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw an ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. The ellipse is drawn and filled with color TRgb(0, 0, 255).
//!                         4. Check the out most borders of ellipse.
//!                            Only check pixel1~pixel5 on the border of ellipse.
//!                         5. Inside the ellipse, check sample points pixel6~pixel8 specified in test data.
//!                            Outside the ellipse, check sample points pixel9~pixel11 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0274

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle (0, 0, 0, 0) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the rectangle.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275-DrawRoundRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0275

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a round rectangle (0, 0, 100, 150) area with null brush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set pen color and null brush to fill and draw the rectangle.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle, its border, as well as sample pixels inside and outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The round rectangle will be drawn without error.
//!                         2. The drawing result is as expected.
//!                         3. The round rectangle is drawn with color TRgb(0, 0, 0).
//!                         4. Check the out most borders of round rectangle.
//!                            Check the rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-checkRectColor_command11
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-checkLineColor_command12
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276-checkPixels_command13
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0276

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a round rectangle (0, 0, 100, 150) area with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush color to fill and draw the rectangle. Also set null pen.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle, its border, as well as sample pixels inside and outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The round rectangle will be drawn without error.
//!                         2. The drawing result is as expected.
//!                         3. The round rectangle is filled with color TRgb(0, 0, 255).
//!                         4. Check the out most borders of round rectangle.
//!                            Check the rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-checkRectColor_command11
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-checkLineColor_command12
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277-checkPixels_command13
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0277

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a round rectangle (0, 0, 100, 150) area with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush color to fill and draw the rectangle. Also set pen size to TSize(0, 1).
//!                         7. Draw rectangle.
//!                         8. Check the rectangle, its border, as well as sample pixels inside and outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The round rectangle will be drawn without error.
//!                         2. The drawing result is as expected.
//!                         3. The round rectangle is filled with color TRgb(0, 0, 255).
//!                         4. Check the rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-SetPenSize_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-checkRectColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0278

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref}, const TSize{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a round rectangle (0, 0, 100, 150) area with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush color to fill and draw the rectangle. Also set pen size to TSize(0, 1).
//!                         7. Draw rectangle.
//!                         8. Check the rectangle, its border, as well as sample pixels inside and outside the rectangle.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The round rectangle will be drawn without error.
//!                         2. The drawing result is as expected.
//!                         3. The round rectangle is filled with color TRgb(0, 0, 255).
//!                         4. Check the rectangle.
//!                         5. Inside the rectangle, check sample points pixel1~pixel3 specified in test data.
//!                            Outside the rectangle, check sample points pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-SetPenSize_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-DrawRoundRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-checkRectColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0279

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a round rectangle in rectangle (8000, 8000, 9000, 9000) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush style and color TRgb(255, 255, 255) to clear the device.
//!                         6. Set brush and pen color to fill and draw the round rectangle.
//!                         7. Draw round rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The round rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280-DrawRoundRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0280

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0282
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0282
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a round rectangle to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw round rectangle.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0282-Activate_command02
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0282-DrawRoundRect_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0282

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0283
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0283
//! @SYMAPI                 CFbsBitGc::DrawRoundRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a round rectangle by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw round rectangle.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing round rectangle using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawRoundRect                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0283-DrawRoundRect_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0283

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw a polyline from a point list.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a polyline from a point list.
//!                         7. Check the whole line.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polyline without error.
//!                         2. The drawing result is as expected.
//!                         3. Check color of the lines
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-SetBrushColor_cmand0006
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-DrawPolyLine_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0284

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a point list with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(0, 1).
//!                         7. Draw a polyline from a point list.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-SetBrushColor_cmand0006
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285-DrawPolyLine_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0285

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a point list with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size to TSize(1, 0).
//!                         7. Draw a polyline from a point list.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-SetBrushColor_cmand0006
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286-DrawPolyLine_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0286

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a point list with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set null pen.
//!                         7. Draw a polyline from a point list.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-SetBrushColor_cmand0006
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-SetPenStyle_command08
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287-DrawPolyLine_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0287

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0290
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0290
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Draw a polyline to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0290-Activate_command02
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0290-DrawPolyLine_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0290

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0291
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0291
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing round rectangle using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0291-DrawPolyLine_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0291

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw a polyline from a point list but not draw the end point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a polyline from a point list.
//!                         7. Check the lines drawn.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polyline without error.
//!                         2. The drawing result is as expected.
//!                         3. Check color of the lines
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-DrawPolyLineNoEndPoint_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0292

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a point list but not draw the end point with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size TSize(0, 1).
//!                         7. Draw a polyline from a point list.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293-DrawPolyLineNoEndPoint_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0293

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a point list but not draw the end point with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size TSize(1, 0).
//!                         7. Draw a polyline from a point list.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294-DrawPolyLineNoEndPoint_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0294

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0296
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0296
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0296-Activate_command02
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0296-DrawPolyLineNoEndPoint_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0296

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0297
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0297
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const CArrayFix<TPoint>{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing round rectangle using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0297-DrawPolyLineNoEndPoint_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0297

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw a polyline from a list of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a polyline from a point list with number of points.
//!                         7. Check the lines drawn.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polyline without error.
//!                         2. The drawing result is as expected.
//!                         3. Check color of the lines
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-DrawPolyLine_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0298

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline from a list of points with a null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set null pen.
//!                         7. Draw a polyline from a point list with number of points.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-SetPenStyle_command08
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299-DrawPolyLine_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0299

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0300
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0300
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0300-Activate_command02
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0300-DrawPolyLine_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0300

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0301
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0301
//! @SYMAPI                 CFbsBitGc::DrawPolyLine(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing round rectangle using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolyLine                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-0301-DrawPolyLine_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0301

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw a polyline but not draw the final point from a list of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a polyline from a point list with number of points.
//!                         7. Check all the lines.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polyline without error.
//!                         2. The drawing result is as expected.
//!                         3. Check color of the lines
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-DrawPolyLineNoEndPoint_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0302

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline but not draw the final point when number of points set to 0.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a polyline from a point list with number of points.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303-DrawPolyLineNoEndPoint_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0303

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline but not draw the final point from a list of points with 0-width pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size TSize(0, 1).
//!                         7. Draw a polyline from a point list with number of points.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304-DrawPolyLineNoEndPoint_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0304

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline but not draw the final point from a list of points with 0-height pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set pen size TSize(1, 0).
//!                         7. Draw a polyline from a point list with number of points.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polyline will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-SetPenSize_command08
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305-DrawPolyLineNoEndPoint_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0305

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0307
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0307
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0307-Activate_command02
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0307-DrawPolyLineNoEndPoint_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0307

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0308
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0308
//! @SYMAPI                 CFbsBitGc::DrawPolyLineNoEndPoint(const TPoint{ptr}, TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polyline by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polyline.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing round rectangle using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolyLineNoEndPoint                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0308-DrawPolyLineNoEndPoint_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0308

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a list of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0309

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Draw a large polygon from a list of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0310

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a list of points and fill it with null brush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set pen color to draw the polygon and null brush to fill the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0311

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a list of points with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill the polygon and pen size to TSize(0, 1).
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-SetPenSize_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0312

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a list of points with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill the polygon and pen size to TSize(1, 0).
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-SetPenSize_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0313

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a list of points with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill the polygon and null pen.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel3 specified in test data.
//!                            Outside the polygon, check pixel4~pixel6 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0314

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0318
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0318
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polygon to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polygon.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0318-Activate_command02
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0318-DrawPolygon_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0318

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0319
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0319
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const CArrayFix< TPoint > {ptr},TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polygon by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polygon.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing polygon using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0319-DrawPolygon_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0319

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0320

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points which doesn't have any point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The polygon will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321-DrawPolygon_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0321

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a large polygon from a array of points.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0322

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points and fill it with null brush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush and pen color to fill and draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-SetPenColor_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0323

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill and set null pen to draw the polygon.
//!                         7. Draw the polygon
//!                         8. Check the border and pixels inside & outside the polygon.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0324

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points with 0-width pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill and draw the polygon.
//!                         7. Set pen size to TSize(0, 1).
//!                         8. Draw the polygon
//!                         9. Check the border and pixels inside & outside the polygon.
//!                         10. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-SetPenSize_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0325

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr},TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a polygon from a array of points with 0-height pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to clear device.
//!                         6. Set brush color to fill and draw the polygon.
//!                         7. Set pen size to TSize(1, 0).
//!                         8. Draw the polygon
//!                         9. Check the border and pixels inside & outside the polygon.
//!                         10. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a polygon without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the lines drawn per point list specified in test data.
//!                         4. Inside the polygon, check pixel1~pixel2 specified in test data.
//!                            Outside the polygon, check pixel3~pixel4 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-SetPenSize_command09
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-DrawPolygon_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-checkLineColor_command11
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326-checkPixels_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0326

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0327
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0327
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr}, TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polygon to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw polygon.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0327-Activate_command02
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0327-DrawPolygon_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0327

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0328
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0328
//! @SYMAPI                 CFbsBitGc::DrawPolygon(const TPoint{ptr}, TInt, TFillRule)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a polygon by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw polygon.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing polygon using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawPolygon                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0328-DrawPolygon_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0328

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        01/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush style and color.
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-SetPenColor_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0329

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an ellipse in rectangle (0, 0, 0, 0) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush style and color.
//!                         7. Draw ellipse.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The ellipse will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-SetPenColor_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330-DrawEllipse_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0330

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an ellipse in rectangle (8000, 8000, 9000, 9000) area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush style and color.
//!                         7. Draw ellipse.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The ellipse will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-SetPenColor_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331-DrawEllipse_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0331

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area and fill it with null brush.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set to null brush.
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-SetPenColor_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0332

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and set null pen.
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0333

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and set pen size to TSize(0, 0).
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-SetPenSize_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0334

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and set pen size to TSize(1, 0)
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-SetPenSize_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0335

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 200) area and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and set pen size to TSize(2, 1).
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-SetPenSize_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0336

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw an ellipse in rectangle (0, 0, 100, 300) area and draw it with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and set pen size to TSize(2, 2).
//!                         7. Draw ellipse.
//!                         8. Check the border and pixels inside & outside the ellipse.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a ellipse without error.
//!                         2. The drawing result is as expected.
//!                         3. Check pixel1~pixel8 on the border of ellipse.
//!                         4. Inside the ellipse, check pixel9~pixel10 specified in test data.
//!                            Outside the ellipse, check pixel11~pixel2 specified in test data.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-SetPenSize_command09
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-DrawEllipse_command10
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337-checkPixels_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0337

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0340
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0340
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a ellipse to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw ellipse.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0340-Activate_command02
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0340-DrawEllipse_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0340

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0341
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0341
//! @SYMAPI                 CFbsBitGc::DrawEllipse(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a ellipse by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw Ellipse.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing ellipse using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawEllipse                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0341-DrawEllipse_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0341

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342
//! @SYMAPI                 CFbsBitGc::DrawLine(const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        28/11/2008
//! @SYMTestCaseDesc        Draw a line from start point to end point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a line from start point to end point.
//!                         7. Check the whole line.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a line without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the line color specified in test data
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-DrawLine_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0342

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343
//! @SYMAPI                 CFbsBitGc::DrawLine(const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line from start point to end point which is out of user clip region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a line from start point to end point.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The line will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343-DrawLine_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0343

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0344
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0344
//! @SYMAPI                 CFbsBitGc::DrawLine(const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0344-Activate_command02
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0344-DrawLine_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0344

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0345
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0345
//! @SYMAPI                 CFbsBitGc::DrawLine(const TPoint{ref}, const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing line using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0345-DrawLine_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0345

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346
//! @SYMAPI                 CFbsBitGc::DrawLineTo(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        02/12/2008
//! @SYMTestCaseDesc        Draw a line from current drawing point to a specified point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a line from current drawing point to a specified point.
//!                         7. Check the whole line.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a line without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the line color specified in test data
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawLineTo                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-DrawLineTo_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0346

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0347
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0347
//! @SYMAPI                 CFbsBitGc::DrawLineTo(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0347-Activate_command02
        COMMAND             fbsBitGc             DrawLineTo                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0347-DrawLineTo_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0347

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0348
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0348
//! @SYMAPI                 CFbsBitGc::DrawLineTo(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing line using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawLineTo                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0348-DrawLineTo_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0348

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349
//! @SYMAPI                 CFbsBitGc::DrawLineBy(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        02/12/2008
//! @SYMTestCaseDesc        Draw a straight line relative to the current drawing point, using a vector.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a straight line relative to the current drawing point, using a vector.
//!                         7. Check the whole line.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a line without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the line color specified in test data
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawLineBy                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-DrawLineBy_command08
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349-checkLineColor_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0349

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0350
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0350
//! @SYMAPI                 CFbsBitGc::DrawLineBy(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0350-Activate_command02
        COMMAND             fbsBitGc             DrawLineBy                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0350-DrawLineBy_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0350

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0351
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0351
//! @SYMAPI                 CFbsBitGc::DrawLineBy(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a line by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw line.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing line using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawLineBy                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0351-DrawLineTo_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0351

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush and pen color.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle drawn.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0352

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        01/12/2008
//! @SYMTestCaseDesc        Negative case. Draw an empty rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush and pen color.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0353

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle out of user clip region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush and pen color.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0354

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with 0-width pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and pen size to TSize(0, 1).
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-SetPenSize_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0355

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with 0-height pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and pen size to TSize(0, 1).
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-SetPenSize_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0356

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with null pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and null pen.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0357

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with dotted pen
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and dotted pen.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0358

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a 1-width rectangle (a line).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush and pen color.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle drawn.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-DrawRect_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359-checkLineColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0359

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a 1 x 1 rectangle (a line).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush and pen color.
//!                         7. Draw rectangle.
//!                         8. Check the rectangle drawn.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Draw a rectangle without error.
//!                         2. The drawing result is as expected.
//!                         3. Check the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-SetPenColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-DrawRect_command10
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360-checkLineColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0360

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with pen size TSize(1, 2).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and pen size to TSize(1, 2).
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-SetBrushColor_command08
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-SetPenSize_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-DrawRect_command10
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361-checkRectColor_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0361

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/12/2008
//! @SYMTestCaseDesc        Draw a rectangle with draw mode set to EDrawModeWriteAlpha.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Set brush color and draw mode.
//!                         7. Draw rectangle.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-SetBrushColor_command08
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-SetDrawMode_command09
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-SetPenSize_command10
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-DrawRect_command11
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362-checkRectColor_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0362

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a line of the text at the current position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-DrawText_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0401

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitive case, Set the TDesC is Null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-DrawText_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~     
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0402

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a line of text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text at the beginning point(20,30).
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-DrawText_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0403

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a line of text at negitve/too big position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text at negitive(-10,-10)/too big(640000,640000) point.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-DrawText_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-DrawText_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0404

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a line of text within the clipping rectangle(0,0,100,200).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-DrawText_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0405

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a line of text within the clipping rectangle(0,0,0,0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-DrawText_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0406

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a line of text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-DrawText_command09
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-DrawText_command10        
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-DrawText_command11
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0407

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a line of text with bad params.(negtive/too big Baselineoffset and Margin)
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-DrawText_command09
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-DrawText_command10        
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0408

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a line of text within a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of the text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-DrawText_command09        
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-DrawText_command10
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-DrawText_command11
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0409

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a line of text with negitive/too big aTextWidth params.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-DrawText_command09        
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-DrawText_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0410

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of the text at the current position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-DrawTextVertical_command10
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-DrawTextVertical_command11
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0411

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitive case, Set the TDesC is Null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-DrawTextVertical_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~     
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0412

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text at the beginning point(20,30).
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A verical line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-DrawTextVertical_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0413

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical line of text at negitve/too big position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text at negitive(-10,-10)/too big(640000,640000) point.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawTextVertical is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-DrawTextVertical_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-DrawTextVertical_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0414

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within the clipping rectangle(0,0,100,200).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-DrawTextVertical_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0415

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical line of text within the clipping rectangle(0,0,0,0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-DrawTextVertical_command09
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0416

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TInt, TBool, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-DrawTextVertical_command09
		COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-DrawTextVertical_command10        
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-DrawTextVertical_command11
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0417

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TInt, TBool, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad params.(negtive/too big Baselineoffset and Margin)
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-DrawTextVertical_command09
		COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-DrawTextVertical_command10        
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0418

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TInt, TInt, TBool, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of the text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-DrawTextVertical_command09        
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419-ReleaseFont_command11
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0419

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TRect(ref), TInt, TInt, TBool, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        23/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with negitive/too big aTextWidth params.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-DrawTextVertical_command09        
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-DrawTextVertical_command10
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0420

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Draw a line of the text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the TTextParameter.
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-DrawText_command10
        DELAY               500000
        COMMAND				fbsBitGc			 Clear
        COMMAND				fbsBitGc			 DrawText									GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-DrawText_command13
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441-ReleaseFont_command16
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0441

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, Set the TDesC is Null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-DrawText_command10
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~     
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0442

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-DrawText_command10
    	DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0443

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-MoveTo_command09
        COMMAND 		    fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-DrawText_command10 		       
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0444

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults GNothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-DrawText_command10
    	DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0445

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-MoveTo_command09
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-DrawText_command10
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0446

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a line of text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text at the beginning point(20,30).
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-DrawText_command09
        DELAY               500000
        COMMAND				fbsBitGc			 Clear
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-DrawText_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0447

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case, draw text with Null input and bad TPoint(Negtive/too big).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-DrawText_command09
		DELAY               500000
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-DrawText_command11
		DELAY               500000
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-DrawText_command13        
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448-ReleaseFont_command16
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0448

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0449

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-UseFont_command08
        COMMAND  			fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0450

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0451

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults DrawText is called without panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0452

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a line of text within the clipping rectangle(0,0,100,200).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-DrawText_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453-ReleaseFont_command15
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0453

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a line of text with Null input and bad TRect.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-DrawText_command09
		DELAY               500000
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-DrawText_command11        
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454-ReleaseFont_command14
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0454

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
   END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0455

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-UseFont_command08
        COMMAND   			fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-DrawText_command09
       	DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0456

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0457

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref)).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0458

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a line of text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-DrawText_command09
		DELAY               500000
		COMMAND             fbsBitGc             Clear
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-DrawText_command12        
        DELAY               500000
		COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-DrawText_command15
        DELAY               500000
		COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-DrawText_command18
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459-ReleaseFont_command21
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0459

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a line of text with Null input, bad aBaselineOffset and bad aMargin.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-DrawText_command09
		COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-DrawText_command10        
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-DrawText_command11
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460-ReleaseFont_command14
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0460

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0461

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-UseFont_command08
        COMMAND  	  		fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0462

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0463

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0464

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a line of text within a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A line of the text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-DrawText_command09        
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-DrawText_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0465

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a line of text with Null input and bad aTextWidth.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-DrawText_command09        
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-DrawText_command10
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-DrawText_command11
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466-ReleaseFont_command14
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0466

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0467

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-UseFont_command08
        COMMAND 			fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0468

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0469

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470
//! @SYMAPI                 CFbsBitGc::DrawText(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a line of the text.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-UseFont_command08
        COMMAND             fbsBitGc             DrawText      								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-DrawText_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0470

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of the text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the TTextParameter.
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-DrawTextVertical_command10
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-DrawTextVertical_command13
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-DrawTextVertical_command16
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471-ReleaseFont_command19
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0471

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, Set the TDesC is Null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-DrawTextVertical_command10
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~     
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0472

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-DrawTextVertical_command10
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0473

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-DrawTextVertical_command10
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~   
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0474

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-DrawTextVertical_command10
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0475

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a vertical line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-UseFont_command08
        COMMAND				fbsBitGc			 MoveTo										GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-MoveTo_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-DrawTextVertical_command10
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476-ReleaseFont_command13
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK 
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0476

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text at the specific position.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text at the beginning point(20,30).
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-DrawTextVertical_command09
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-DrawTextVertical_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0477

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, Set the TDesC is Null and bad Point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-DrawTextVertical_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-DrawTextVertical_command10
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-DrawTextVertical_command11
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478-ReleaseFont_command14
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~     
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0478

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, Draw text with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-DrawTextVertical_command09
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK 
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0479

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-DrawTextVertical_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0480

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-DrawTextVertical_command09
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0481

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TPoint(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitive case, DrawText with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!							7. Set the current position to the point(20,20).
//!                         8. Draw a line of the text.
//!                         9. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-DrawTextVertical_command09
	    DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~ 
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0482

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within the clipping rectangle(0,0,100,200).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-DrawTextVertical_command09
        DELAY               500000
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-DrawTextVertical_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0483

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical line of text with Null input and bad TRect.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-DrawTextVertical_command09
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-DrawTextVertical_command10
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-DrawTextVertical_command11
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-DrawTextVertical_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0484

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical with bad TTextParameters(negitive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0485

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical line with bad TTextParameters(Too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-UseFont_command08
        COMMAND  			fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-DrawTextVertical_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0486

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0487

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negitve case,Draw a vertical with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0488

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the clipping rectangle with params TTextAlign=ELeft/ECenter/ERight.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of text will be drawn within the rectangle.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-DrawTextVertical_command09
		DELAY               500000
		COMMAND             fbsBitGc             Clear
		COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-DrawTextVertical_command12        
        DELAY               500000
		COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-DrawTextVertical_command15
        DELAY               500000
		COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-DrawTextVertical_command18
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489-ReleaseFont_command21
        COMMAND             fbsScrDev            Update   
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0489

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with Null input and  bad BaselineOffset and bad Margin.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-DrawTextVertical_command09
		COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-DrawTextVertical_command10        
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-DrawTextVertical_command11
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490-ReleaseFont_command14
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0490

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(negitive point).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0491

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-UseFont_command08
        COMMAND 		    fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-DrawTextVertical_command09
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0492

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0493

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-DrawTextVertical_command09
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0494

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Draw a vertical line of text within a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A vertical line of the text will be drawn without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-DrawTextVertical_command09        
        DELAY               500000
        COMMAND				fbsBitGc			 Clear
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-DrawTextVertical_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0495

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with Null input and bad TextWidth.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-DrawTextVertical_command09        
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-DrawTextVertical_command10
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-DrawTextVertical_command11
        COMMAND				fbsBitGc			 DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-DrawTextVertical_command12
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496-ReleaseFont_command15
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0496

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(negitive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-DrawTextVertical_command09        
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0497

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text with bad params.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-UseFont_command08
        COMMAND  		    fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-DrawTextVertical_command09        
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0498

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-DrawTextVertical_command09        
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0499

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500
//! @SYMAPI                 CFbsBitGc::DrawTextVertical(const TDesC{ref}, const TTextParameters{ptr}, const TRect(ref), TInt, TInt, TTextAlign, TInt, TBool).
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case,Draw a vertical line of text with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Clear the device and set pen color TRgb(255, 0, 255).
//!                         6. Set the useFont.
//!                         7. Draw a vertical line of the text within the rectangle.
//!                         8. Release useFont and disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Nothing will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont          	 font
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-NewL_command03
        COMMAND             fbsBitGc             Activate                       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor   								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-SetPenColor_command06
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels     	GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-GetNearestFontToDesignHeightInPixels_command07
        COMMAND             fbsBitGc             UseFont       								GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-UseFont_command08
        COMMAND             fbsBitGc             DrawTextVertical      						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-DrawTextVertical_command09        
		DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont        						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500-ReleaseFont_command12
        COMMAND             fbsScrDev            Update    
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0500

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Update the Justification setting.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0501

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negitive case,Update the Justification setting by Null input.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is called without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0502

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Update the Justification setting.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503-UpdateJustificationVertical_command05
        COMMAND				fbsBitGc			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503-UpdateJustificationVertical_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0503

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        24/12/2008
//! @SYMTestCaseDesc        Negitive case,Update the Justification setting by Null input.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is called without any panic.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0504

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Update the Justification setting.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505-UpdateJustification_command05
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505-UpdateJustification_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0505

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with Null input.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0506

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0507

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0508

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0509

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510
//! @SYMAPI                 CFbsBitGc::UpdateJustification(const TDesC{ref}, const TTextParameters{ptr})
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustification						GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510-UpdateJustification_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0510

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Update the Justification setting.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511-UpdateJustificationVertical_command05
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511-UpdateJustificationVertical_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0511

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with NULL input.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0512

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with bad TTextParameters(negtive position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0513

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with bad TTextParameters(too big position).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0514

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with bad TTextParameters(iStart is equal to iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0515

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, const TTextParameters{ptr}, TBool)
//! @SYMAuthor              Wei Liu
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Negtive case, Update the Justification setting with bad TTextParameters(iStart is bigger than iEnd).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Update the justification settings.
//!                         6. Disconnect RFbsSession, destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Justification is updated without any error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                           			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516-NewL_command03
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate       			GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc  			 UpdateJustificationVertical				GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516-UpdateJustificationVertical_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0516


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517
//! @SYMAPI                 CFbsBitGc::UpdateJustificationVertical(const TDesC{ref}, TBool);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        19/01/2009
//! @SYMTestCaseDesc        Set the character justification to (30, 6), (-30, 6), (30, -1), (0, -2);
//!                         Set the word justification to (20, 3), (-20, 3), (20, -1), (0, -1);
//!                         Update the justification for vertical text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the character justification to (30, 6).
//!                         6. Update the justification for vertical text.
//!                         7. Set the word justification to (20, 3).
//!                         8. Update the justification for vertical text.
//!                         9. Set the character justification to (-30, 6).
//!                         10.Update the justification for vertical text.
//!                         11.Set the word justification to (-20, 3).
//!                         12.Update the justification for vertical text.
//!                         13.Set the character justification to (30, -1).
//!                         14.Update the justification for vertical text.
//!                         15.Set the word justification to (20, -1).
//!                         16.Update the justification for vertical text.
//!                         17.Set the character justification to (0, -2).
//!                         18.Update the justification for vertical text.
//!                         19.Set the word justification to (0, -1).
//!                         20.Update the justification for vertical text.
//!                         21.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         22.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Update justification without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             ActivateNoJustAutoUpdate               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-ActivateNoJustAutoUpdate_command04
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetCharJustification_command05
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command06
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetWordJustification_command07
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command08
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetCharJustification_command09
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command10
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetWordJustification_command11
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command12
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetCharJustification_command13
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command14
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetWordJustification_command15
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command16
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetCharJustification_command17
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command18
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-SetWordJustification_command19
        COMMAND             fbsBitGc             UpdateJustificationVertical            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517-UpdateJustificationVertical_command20
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0517


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0601
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0601
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle to invalid graphic device.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Associate the CFbsBitGc object with the invalid CFbsScreenDevice object.
//!                         3. Draw rectangle.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when trying to draw to an invalid device.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0601-Activate_command02
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0601-DrawRect_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0601

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0602
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0602
//! @SYMAPI                 CFbsBitGc::DrawRect(const TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        04/12/2008
//! @SYMTestCaseDesc        Negative case. Draw a rectangle by using a non-activated graphics context.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Draw rectangle.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 1 of BITGDI when drawing line using a non-activated graphics context.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-2.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0602-DrawRect_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0602

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801
//! @SYMAPI                 CFbsBitGc::MapColors(const TRect{ref}, const TRgb{ptr}, TInt, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Maps pixels in the specified rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and solid brush and clear the device.
//!                         6. Map pixels in rectangle area (0, 0, 100, 100) with TRgb pair {TRgb(255, 255, 255), TRgb(0, 255, 0)}.
//!                         7. Check the rectangle area which has color mapped.
//!                         8. Map pixels in rectangle area (101, 101, 150, 150) with TRgb pair {TRgb(0, 0, 255), TRgb(0, 255, 0)}.
//!                         9. Check the rectangle area which has color mapped.
//!                         10. Update the device.
//!                         11. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The color-mapped rectangle will be drawn in color TRgb(0, 255, 0)
//!                         2. Check the 2 mapped rectangles.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-MapColors_command08
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-MapColors_command09
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801-checkRectColor_command10
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0801

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802
//! @SYMAPI                 CFbsBitGc::MapColors(const TRect{ref}, const TRgb{ptr}, TInt, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Maps pixels in empty rectangle and a rectangle intersects with but does not equal to mapping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and solid brush and clear the device.
//!                         6. Map pixels in rectangle area (0, 0, 0, 0) with TRgb pair {TRgb(255, 255, 255), TRgb(0, 255, 0)} and clear the device.
//!                         7. Set brush color TRgb(255, 0, 0) and pen color TRgb(255, 0, 0).
//!                         8. Draw a rectangle area (0, 0, 50, 50) in TRgb(255, 0, 0).
//!                         9. Map pixels in rectangle area (10, 10, 100, 100) with TRgb pair {TRgb(255, 0, 0), TRgb(0, 255, 0)}.
//!                         10. Check the drawn and mapped rectangles.
//!                         11. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. First call to MapColors() will have no effects.
//!                         2. Second call to MapColors() will have color of rectangle area (10, 10, 50, 50) mapped.
//!                         3. The color of rectangles (0, 0, 10 ,50), (10, 0, 50, 10) in color TRgb(255, 0, 0).
//!                         4. The color of rectangles (10, 50, 50 ,100), (50, 10, 100, 100) in color TRgb(255, 255, 255).
//!                         5. The color of rectangle (10, 10, 50 ,50) in color TRgb(0, 255, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-MapColors_command08
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-SetBrushColor_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-SetPenColor_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-DrawRect_command12
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-MapColors_command15
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802-checkRectColor_command16
        COMMAND             fbsSession           Disconnect
        DELAY               500000
        COMMAND             fbsScrDev            Update
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0802

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803
//! @SYMAPI                 CFbsBitGc::MapColors(const TRect{ref}, const TRgb{ptr}, TInt, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Maps pixels in the specified rectangle which does not intersect with clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device.
//!                         6. Set clipping rectangle area(110, 110, 120, 120).
//!                         7. Map pixels in rectangle area (0, 0, 100, 100) with TRgb pair {TRgb(255, 255, 255), TRgb(0, 255, 0)}.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults MapColors() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-SetClippingRect_command08
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803-MapColors_command09
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0803

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0804
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0804
//! @SYMAPI                 CFbsBitGc::MapColors(const TRect{ref}, const TRgb{ptr}, TInt, TBool)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Maps pixels in the specified rectangle using non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Map pixels in rectangle area (0, 0, 100, 100) with TRgb pair {TRgb(255, 255, 255), TRgb(0, 255, 0)}.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             MapColors                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0804-MapColors_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0804

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901
//! @SYMAPI                 CFbsBitGc::MoveTo(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        01/12/2008
//! @SYMTestCaseDesc        Sets the internal drawing position relative to the co-ordinate origin.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Move the drawing position to point.
//!                         7. Draw a line.
//!                         8. Check the start point of the line as the result of MoveTo() operation.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Current drawing position is move to point specified in test data.
//!                         2. The target point is drawn as the start point of the line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             MoveTo                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-MoveTo_command08
        COMMAND             fbsBitGc             DrawLineTo                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-DrawLineTo_command09
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901-checkPixels_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0901

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902
//! @SYMAPI                 CFbsBitGc::MoveBy(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        01/12/2008
//! @SYMTestCaseDesc        Sets the internal drawing position relative to the co-ordinate origin.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a line.
//!                         7. Move current drawing position relative to the end point of the line just drawn.
//!                         8. Draw a line.
//!                         9. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Current drawing position is move to point specified in test data.
//!                         2. The target point is drawn as the start point of the line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-DrawLine_command08
        COMMAND             fbsBitGc             MoveBy                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-MoveBy_command09
        COMMAND             fbsBitGc             DrawLineBy                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902-DrawLineBy_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0902

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911
//! @SYMAPI                 CFbsBitGc::OrientationsAvailable(TBool{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Get the orientations supported.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Get the orientations supported.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults OrientationsAvailable() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911-Activate_command04
        COMMAND             fbsBitGc             OrientationsAvailable                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911-OrientationsAvailable_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0911

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0912
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0912
//! @SYMAPI                 CFbsBitGc::OrientationsAvailable(TBool{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Get the orientations supported on a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Get the orientations supported.
//!                         3. Destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults OrientationsAvailable() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             OrientationsAvailable                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-0912-OrientationsAvailable_command02
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0912

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Draws a single point.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color TRgb(255, 255, 255) and clear the device with brush color just set.
//!                         6. Draw a single point (10, 7).
//!                         7. check the pixels just drawn.
//!                         8. Set pen size to TSize(30, 1) and plot point (30, 30).
//!                         9. Set pen size to TSize(1, 30) and plot point (60, 60).
//!                         10. Check the 2 drawn lines and clear the device.
//!                         11. Set pen size to TSize(40, 40) and plot point (110, 110).
//!                         12. Check pixels of the filled circle.
//!                         13. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The point will be drawn.
//!                         2. Point (10, 7) in color TRgb(0, 0, 0).
//!                         3. Lines from point (16, 30) to point (45, 30) and from point (60, 46) to (60, 75) in color TRgb(0, 0, 0).
//!                         4. Point (110, 110), (130, 110), (91, 110), (110, 91), (110, 130) in color TRgb(0, 0, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-Plot_command08
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-checkPixels_command09
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-SetPenSize_command10
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-Plot_command11
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-SetPenSize_command12
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-Plot_command13
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-checkLineColor_command14
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-SetPenSize_command15
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-Plot_command16
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921-checkPixels_command17
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0921

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0922
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0922
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Draws a single point using non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Draw a point.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0922-Plot_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0922

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Draws a single point with null pen.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object and clear the device.
//!                         5. Set pen style to null pen.
//!                         6. Draw a single point.
//!                         7. Check color of the point.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The point will not be drawn.
//!                         2. The color of the point is TRgb(255, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923-SetPenStyle_command06
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923-Plot_command07
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923-checkPixels_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0923

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Draws a single point with pen size set to TSize(0, 1).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object and clear the device.
//!                         5. Set pen size to TSize(0, 1).
//!                         6. Draw a single point.
//!                         7. Check color of the point.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The point will not be drawn.
//!                         2. The color of the point is TRgb(255, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924-SetPenSize_command06
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924-Plot_command07
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924-checkPixels_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0924

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Draws a single point with pen size set to TSize(0, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object and clear the device.
//!                         5. Set pen size to TSize(0, 0).
//!                         6. Draw a single point.
//!                         7. Check color of the point.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The point will not be drawn.
//!                         2. The color of the point is TRgb(255, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925-SetPenSize_command06
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925-Plot_command07
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925-checkPixels_command08
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0925

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926
//! @SYMAPI                 CFbsBitGc::Plot(const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        07/01/2009
//! @SYMTestCaseDesc        Negative case. Draws a single point in rectangle area which doesnt intersect with clipping rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set clipping rectangle area TRect(8000, 8000, 8005, 8005).
//!                         6. Draw a single point (10, 10).
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The point will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926-Activate_command04
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926-SetClippingRect_command05
        COMMAND             fbsBitGc             Plot                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926-Plot_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0926

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927
//! @SYMAPI                 CFbsBitGc::RectDrawnTo(TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Get the bounding rectangle of all drawing done before this function is called.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw a line from TPoint(5, 0) to TPoint(5, 100)
//!                         6. Draw a line from TPoint(0, 0) to TPoint(100, 0)
//!                         7. Get the bounding rectangle of all drawing done.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults RectDrawnTo() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927-Activate_command04
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927-DrawLine_command05
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927-DrawLine_command06
        COMMAND             fbsBitGc             RectDrawnTo                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927-RectDrawnTo_command07
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0927

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928
//! @SYMAPI                 CFbsBitGc::RectDrawnTo(TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Get the bounding rectangle of all drawing done before this function is called which is very large.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Draw a line from TPoint(5, 0) to TPoint(5, 8000)
//!                         6. Get the bounding rectangle of all drawing done.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults RectDrawnTo() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928-Activate_command04
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928-DrawLine_command05
        COMMAND             fbsBitGc             RectDrawnTo                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928-RectDrawnTo_command06
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0928

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929
//! @SYMAPI                 CFbsBitGc::RectDrawnTo(TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Get the bounding rectangle when no drawing done.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Get the bounding rectangle of all drawing done.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults RectDrawnTo() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929-Activate_command04
        COMMAND             fbsBitGc             RectDrawnTo                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929-RectDrawnTo_command05
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0929

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0930
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0930
//! @SYMAPI                 CFbsBitGc::RectDrawnTo(TRect{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Get the bounding rectangle of non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         5. Get the bounding rectangle of all drawing done.
//!                         6. Destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults RectDrawnTo() will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             RectDrawnTo                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0930-RectDrawnTo_command02
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0930

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931
//! @SYMAPI                 CFbsBitGc::Reset()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Resets the graphics context to its default settings.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and a CFbsTypefaceStore object and a CFbsFont object.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Set brush color to TRgb(255, 0, 0) and brush style to ESolidBrush and clear the device.
//!                         6. Set pen size to (10, 1) and draw a line from point (0, 5) to point (10, 5) which is actually a rectangle.
//!                         7. Set clipping rectangle area (10, 20, 20, 30).
//!                         8. Draw a line from point (25, 20) to (35, 20) which is actually a rectangle.
//!                         9. Set brush and pen color to TRgb(0, 255, 0) and TRgb(0, 0, 255) respectively.
//!                         10. Set clipping rectangle area (30, 0, 100, 100).
//!                         11. Set draw mode to EDrawModeAND and set pen style to EDottedPen.
//!                         12. Draw a rectangle area (30, 0, 120, 120).
//!                         13. Check the 3 rectangles.
//!                         14. Get a font and make CFbsBitGc object use this font.
//!                         15. Test if the font is used.
//!                         16. Reset the CFbsBitGc object.
//!                         17. Clear the device and test if the font is used.
//!                         18. Draw a rectangle area (0, 0, 60, 120).
//!                         19. Check the rectangle and its border.
//!                         20. Disconnect RFbsSession , release CFbsFont object and destruct CFbsBitGc object, CFbsTypefaceStore object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Reset() will be called without error.
//!                         2. The first 2 rectangles drawn before Reset() call is in color TRgb(0, 0, 0). The 3rd rectangle area in clipping rectangle is in color TRgb(255, 0, 0)
//!                         3. Before Reset() is called, IsFontUsed() returns true. After that call, IsFontUsed() returns false.
//!                         4. The rectangle drawn after Reset() call is in color TRgb(255, 255, 255).
//!                         5. The border of rectangle drawn after Reset() call is in color TRgb(0, 0, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-Activate_command04
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetBrushColor_command05
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetBrushStyle_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetPenSize_command08
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-DrawLine_command09
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetClippingRect_command10
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-DrawLine_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetBrushColor_command12
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetPenColor_command13
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetClippingRect_command14
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetDrawMode_command15
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-SetPenStyle_command16
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-DrawRect_command17
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-checkRectColor_command18
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-GetNearestFontToDesignHeightInPixels_command19
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-UseFont_command20
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-IsFontUsed_command21
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             Reset
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-IsFontUsed_command26
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-DrawRect_command27
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-checkRectColor_command28
        COMMAND             fbsScrDev            checkLineColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-checkLineColor_command29
        COMMAND             fbsScrDev            Update
        DELAY               500000
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931-ReleaseFont_command32
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0931

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0932
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0932
//! @SYMAPI                 CFbsBitGc::Reset()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Resets the graphics context to its default settings using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Reset the CFbsBitGc object.
//!                         3. Destruct CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Reset will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Reset
        COMMAND             fbsBitGc             ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0932

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941
//! @SYMAPI                 CFbsBitGc::Resized()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Needs to be called if the CFbsBitmapDevice is resized.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object and a CFbsBitmap object.
//!                         3. Load the bitmap.
//!                         4. Create a CFbsBitmapDevice object using the CFbsBitmap object.
//!                         5. Activate the CFbsBitGc object to draw to the CFbsBitmapDevice object.
//!                         6. Resize CFbsBitmapDevice object.
//!                         7. Call Resized of CFbsBitGc object
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object, CFbsBitmap object and CFbsBitmapDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Resized will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitmapDevice     fbsBmpDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941-Load_command04
        COMMAND             fbsBmpDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941-Activate_command06
        COMMAND             fbsBmpDev            Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941-Resize_command07
        COMMAND             fbsBitGc             Resized
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBmpDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0941

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942
//! @SYMAPI                 CFbsBitGc::Resized()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Called without CFbsBitmapDevice object resized.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object and a CFbsBitmap object.
//!                         3. Load the bitmap.
//!                         4. Create a CFbsBitmapDevice object using the CFbsBitmap object.
//!                         5. Activate the CFbsBitGc object to draw to the CFbsBitmapDevice object.
//!                         6. Call Resized of CFbsBitGc object
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object, CFbsBitmap object and CFbsBitmapDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Resized will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitmapDevice     fbsBmpDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942-Load_command04
        COMMAND             fbsBmpDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942-Activate_command06
        COMMAND             fbsBitGc             Resized
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBmpDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0942

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0943
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0943
//! @SYMAPI                 CFbsBitGc::Resized()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Called using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object.
//!                         2. Call Resized of CFbsBitGc object
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and Panic String BITGDI
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Resized
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0943

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944
//! @SYMAPI                 CFbsBitGc::Resized()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Negative case. Needs to be called if the CFbsBitmapDevice is resized.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object and load the bitmap.
//!                         4. Create a CFbsBitmapDevice object using the CFbsBitmap object.
//!                         5. Activate the CFbsBitGc object to draw to the CFbsBitmapDevice object.
//!                         6. Draw a line from point (0, 0) to (8000, 8000).
//!                         7. Set the drawing and brush origin to (-8000, -8000).
//!                         8. Resize CFbsBitmapDevice object.
//!                         9. Call Resized of CFbsBitGc object
//!                         10. Disconnect RFbsSession and destruct CFbsBitGc object, CFbsBitmap object and CFbsBitmapDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Resized will be called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitmapDevice     fbsBmpDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-Load_command04
        COMMAND             fbsBmpDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-NewL_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-Activate_command06
        COMMAND             fbsBitGc             DrawLine                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-DrawLine_command07
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-SetOrigin_command08
        COMMAND             fbsBitGc             SetBrushOrigin                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-SetBrushOrigin_command09
        COMMAND             fbsBmpDev            Resize                                 GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944-Resize_command10
        COMMAND             fbsBitGc             Resized
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBmpDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-0944


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101
//! @SYMAPI                 CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush style to ENullBrush and draw a hollow pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ENullBrush.
//!                         6. Set the brush color to TRgb(0, 0, 0).
//!                         7. Draw a pie.
//!                         8. Update the device.
//!                         9. Check a pixel in pie.
//!                         10.Delay half a second
//!                         11.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         12.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A hollow pie will be drawn and the color in TPoint(90, 90) should be TRgb(255, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-SetBrushColor_command07
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-DrawPie_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkPixels                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101-checkPixels_command10
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1101


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102
//! @SYMAPI                 CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush style to ESolidBrush and draw a solid pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 0, 0).
//!                         7. Draw a pie.
//!                         8. Update the device and Delay half a second.
//!                         9. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         10.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A pie will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102-SetBrushColor_command07
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102-DrawPie_command08
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1102


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103
//! @SYMAPI                 CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush style to EPatternedBrush and draw a patterned pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Create a CFbsBitmap and load a bitmap.
//!                         5. Activate the CFbsBitGc object and clear the device.
//!                         6. Set the brush pattern to the bitmap.
//!                         7. Set the brush style to EPatternedBrush.
//!                         8. Draw a pie.
//!                         9. Update the device and Delay half a second.
//!                         10.Destroy the CFbsBitmap object, CFbsBitGc object and CFbsScreenDevice object.
//!                         11.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A pie will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-Load_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-Activate_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-UseBrushPattern_command08
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-SetBrushStyle_command09
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103-DrawPie_command10
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1103


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104
//! @SYMAPI                 CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Negative case; Set the brush style to EPatternedBrush and draw a patterned pie without setting the brush pattern to a bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Create a CFbsBitmap and load a bitmap.
//!                         5. Activate the CFbsBitGc object and clear the device.
//!                         6. Set the brush pattern to the bitmap.
//!                         7. Set the brush style to EPatternedBrush.
//!                         8. Draw a pie and panic occurs.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic "BITGDI 13".
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104-Load_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104-Activate_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104-SetBrushStyle_command08
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104-DrawPie_command09
    END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=13
    RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1104


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105
//! @SYMAPI                 CFbsBitGc::SetBrushColor(const TRgb{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush color to TRgb(255, 0, 0) and draw a red pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set brush color to TRgb(255, 0, 0).
//!                         6. Draw a red pie.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A red pie will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105-SetBrushColor_command07
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105-DrawPie_command08
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1105


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106
//! @SYMAPI                 CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush style to EVerticalHatchBrush, EForwardDiagonalHatchBrush, EHorizontalHatchBrush, ERearwardDiagonalHatchBrush,
//!                         ESquareCrossHatchBrush, EDiamondCrossHatchBrush and draw six colorful rectangles respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush color to TRgb(255, 0, 0).
//!                         6. Set the brush style to EVerticalHatchBrush.
//!                         7. Draw a rectangle.
//!                         8. Set the brush style to EForwardDiagonalHatchBrush.
//!                         9. Draw a rectangle.
//!                         10.Set the brush color to TRgb(0, 255, 0).
//!                         11.Set the brush style to EHorizontalHatchBrush.
//!                         12.Draw a rectangle.
//!                         13.Set the brush style to ERearwardDiagonalHatchBrush.
//!                         14.Draw a rectangle.
//!                         15.Set the brush color to TRgb(0, 0, 255).
//!                         16.Set the brush style to ESquareCrossHatchBrush.
//!                         17.Draw a rectangle.
//!                         18.Set the brush style to EDiamondCrossHatchBrush.
//!                         19.Draw a rectangle.
//!                         20.Update the device and Delay half a second.
//!                         21.Destroy the CFbsBitmap object, CFbsBitGc object and CFbsScreenDevice object.
//!                         22.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Six rectangles with different brush styles will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command07
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command08
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command10
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushColor_command11
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command13
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command14
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command15
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushColor_command16
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command17
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command18
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-SetBrushStyle_command19
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106-DrawRect_command20
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1106


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107
//! @SYMAPI                 CFbsBitGc::SetBrushOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush pattern origin to TPoint(10, 10) and draw a retangle with default brush style.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush pattern origin to TPoint(10, 10).
//!                         6. Draw a rectangle.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A retangle will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushOrigin                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107-SetBrushOrigin_command06
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107-DrawRect_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1107


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108
//! @SYMAPI                 CFbsBitGc::SetBrushOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush pattern origin to TPoint(20, 10) and draw a retangle with a bitmap pattern;
//!                         Then set the brush pattern origin to TPoint(0, 0) and draw another retangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Create a CFbsBitmap and load a bitmap.
//!                         5. Activate the CFbsBitGc object and clear the device.
//!                         6. Set the brush pattern to the bitmap.
//!                         7. Set the brush style to EPatternedBrush.
//!                         8. Set the brush pattern origin to TPoint(20, 10).
//!                         9. Draw a retangle.
//!                         10.Set the brush pattern origin to TPoint(0, 0).
//!                         11.Draw a retangle.
//!                         12.Update the device and Delay half a second.
//!                         13.Destroy fbsBitmap object, CFbsBitGc object and CFbsScreenDevice object.
//!                         14.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Two retangles with different pattern origins will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-Load_command05
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-Activate_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-UseBrushPattern_command08
        COMMAND             fbsBitGc             SetBrushOrigin                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-SetBrushOrigin_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-DrawRect_command10
        COMMAND             fbsBitGc             SetBrushOrigin                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-SetBrushOrigin_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108-DrawRect_command12
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1108


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109
//! @SYMAPI                 CFbsBitGc::SetBrushColor(const TRgb{ref});
//!                         CFbsBitGc::SetBrushStyle(TBrushStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the brush style to ESolidBrush; Set the brush color to TRgb(255, 0, 0), TRgb(0, 0, 0), TRgb(255, 255, 255);
//!                         Draw three rectangles and check retangle color respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Draw a rectangle.
//!                         8. Set the brush color to TRgb(0, 0, 0).
//!                         9. Draw a rectangle.
//!                         10.Set the brush color to TRgb(255, 255, 255).
//!                         11.Draw a rectangle.
//!                         12.Update the device.
//!                         13.Check retangle color.
//!                         14.Delay half a second.
//!                         15.Destroy the CFbsBitmap object, CFbsBitGc object and CFbsScreenDevice object.
//!                         16.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults checkRectColor returns TRUE.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-SetBrushColor_command07
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-DrawRect_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-SetBrushColor_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-DrawRect_command10
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-SetBrushColor_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-DrawRect_command12
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109-checkRectColor_command14        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1109



START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111
//! @SYMAPI                 CFbsBitGc::SetPenColor(const TRgb{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen color to TRgb(0, 0, 255) and draw a pie with blue edge.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen color to TRgb(0, 0, 255).
//!                         6. Draw a pie with blue edge.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A pie with blue edge will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-SetPenColor_command06
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-DrawPie_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112
//! @SYMAPI                 CFbsBitGc::SetPenStyle(TPenStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen style to ENullPen and draw a pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen style to ENullPen.
//!                         6. Draw a pie.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The pie will be drawn without border.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112-SetPenStyle_command06        
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112-DrawPie_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1112


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113
//! @SYMAPI                 CFbsBitGc::SetPenStyle(TPenStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen style to ESolidPen and draw a pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen style to ESolidPen.
//!                         6. Draw a pie.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A pie will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113-SetPenStyle_command06        
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113-DrawPie_command07
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1113


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114
//! @SYMAPI                 CFbsBitGc::SetPenStyle(TPenStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen style to EDottedPen, EDashedPen, EDotDashPen, EDotDotDashPen and draw four colorful rectangles respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen color to TRgb(255, 128, 0);
//!                         6. Set pen style to EDottedPen.
//!                         7. Draw a rectangle.
//!                         8. Set pen style to EDashedPen.
//!                         9. Draw a rectangle. 
//!                         10.Set pen color to TRgb(0, 128, 255);                  
//!                         11.Set pen style to EDotDashPen.
//!                         12.Draw a rectangle.
//!                         13.Set pen style to EDotDotDashPen.
//!                         14.Draw a rectangle.
//!                         15.Update the device and Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Four colorful rectangles with different pen styles will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-SetPenColor_command06
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-SetPenStyle_command07
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-DrawRect_command08
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-SetPenStyle_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-DrawRect_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1111-SetPenColor_command11
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-SetPenStyle_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-DrawRect_command13
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-SetPenStyle_command14
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114-DrawRect_command15
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1114


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115
//! @SYMAPI                 CFbsBitGc::SetPenSize(const TSize{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen size to TSize(4, 2) and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen size to TSize(4, 2).
//!                         6. Draw a rectangle.
//!                         7. Update the device and Delay half a second.
//!                         8. Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         9. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A rectangle will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115-SetPenSize_command06        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115-DrawRect_command07        
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1115


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116
//! @SYMAPI                 CFbsBitGc::SetPenSize(const TSize{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen size to TSize(0, 2), TSize(-2, 0), TSize(0, 0) and draw three rectangles respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         7. Set pen size to TSize(0, 2).
//!                         8. Draw a rectangle.
//!                         9. Set pen size to TSize(-2, 0).
//!                         10.Draw a rectangle.
//!                         11.Set pen size to TSize(0, 0).
//!                         12.Draw a rectangle.
//!                         13.Update the device and Delay half a second.
//!                         14.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         15.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Three rectangles will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-SetPenSize_command06
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-DrawRect_command07
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-SetPenSize_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-DrawRect_command09
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-SetPenSize_command10
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116-DrawRect_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1116


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117
//! @SYMAPI                 CFbsBitGc::SetPenColor(const TRgb{ref});
//!                         CFbsBitGc::SetPenSize(const TSize{ref});
//!                         CFbsBitGc::SetPenStyle(TPenStyle);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the pen style to ESolidPen; Set the pen color to TRgb(255, 0, 0), TRgb(0, 0, 0), TRgb(255, 255, 255);
//!                         Set the pen size to TSize(5, 2), TSize(0, 0), TSize(1, 1);
//!                         Draw three different rectangles, then check retangle edge color respectively. 
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device..
//!                         5. Set pen style to ESolidPen.
//!                         6. Set the pen color to TRgb(255, 0, 0)
//!                         7. Set the pen size to TSize(5, 2).
//!                         8. Draw a rectangle.
//!                         9. Set the pen color to TRgb(0, 0, 0)
//!                         10.Set the pen size to TSize(0, 0).
//!                         11.Draw a rectangle.
//!                         12.Set the pen color to TRgb(255, 255, 255)
//!                         13.Set the pen size to TSize(1, 1).
//!                         14.Draw a rectangle.
//!                         15.Update the device
//!                         16.Check rectangle edge color. 
//!                         17.Delay half a second.
//!                         18.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         19.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The first Rectangle will be drawn with red border color.
//!                         2. The second Rectangle will not be drawn.
//!                         3. The third Rectangle will be drawn with white border color.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenStyle                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenStyle_command06
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenColor_command07
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenSize_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-DrawRect_command09
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenColor_command10
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenSize_command11
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-DrawRect_command12
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenColor_command13
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-SetPenSize_command14
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-DrawRect_command15
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117-checkRectColor_command17
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1117


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121
//! @SYMAPI                 CFbsBitGc::SetClippingRect(const TRect{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping rectangle to TRect(0, 0, 120, 120) and draw a rectangle which is in the clipping area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device..
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Set the clipping rectangle to TRect(0, 0, 120, 120) and clear the device.
//!                         8. Draw a rectangle TRect(20, 20, 100, 100) and update the device.
//!                         9. Check whether the rectangle is drawn as expected.
//!                         10.Delay half a second.
//!                         11.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         12.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will be drawn as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-SetBrushColor_command07
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-SetClippingRect_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-DrawRect_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121-checkRectColor_command11
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1121

 
START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122
//! @SYMAPI                 CFbsBitGc::SetClippingRect(const TRect{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping rectangle to TRect(0, 0, 120, 120) and draw a rectangle which is not in the clipping area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create two CFbsBitGc objects.
//!                         4. Activate a CFbsBitGc object and clear the screen.
//!                         5. Activate another CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 255, 0).
//!                         8. Set the clipping rectangle to TRect(0, 0, 120, 120) and clear the device.
//!                         9. Draw a rectangle TRect(130, 130, 180, 180) and update the device.
//!                         10.Check whether the rectangle is drawn as expected.
//!                         11.Delay half a second.
//!                         12.Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-Activate_command05
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-Activate_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-SetBrushColor_command09
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-SetClippingRect_command10        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-DrawRect_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122-checkRectColor_command13
        DELAY               500000
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1122


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123
//! @SYMAPI                 CFbsBitGc::SetClippingRect(const TRect{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping rectangle to TRect(0, 0, 120, 120) and draw a rectangle whose one corner is in the clipping area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create two CFbsBitGc objects.
//!                         4. Activate a CFbsBitGc object and clear the screen.
//!                         5. Activate another CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 255).
//!                         8. Set the clipping rectangle to TRect(0, 0, 120, 120) and clear the device.
//!                         9. Draw a rectangle TRect(100, 100, 150, 150) and update the device.
//!                         10.Check whether the rectangle is drawn as expected.
//!                         11.Delay half a second.
//!                         12.Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Only the top left corner of the rectangle will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-Activate_command05
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-Activate_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-SetBrushColor_command09
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-SetClippingRect_command10        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-DrawRect_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123-checkRectColor_command13
        DELAY               500000
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1123


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124
//! @SYMAPI                 CFbsBitGc::SetClippingRect(const TRect{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping rectangle to TRect(120, 120, 0, 0) and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create two CFbsBitGc objects.
//!                         4. Activate a CFbsBitGc object and clear the screen.
//!                         5. Activate another CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 255, 0).
//!                         8. Set the clipping rectangle to TRect(120, 120, 0, 0)and clear the device.
//!                         9. Draw a rectangle TRect(50, 50, 100, 100) and update the device.
//!                         10.Check whether the rectangle is drawn as expected.
//!                         11.Delay half a second.
//!                         12.Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle will not be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-Activate_command05
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-Activate_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-SetBrushColor_command09
        COMMAND             fbsBitGc             SetClippingRect                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-SetClippingRect_command10        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-DrawRect_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124-checkRectColor_command13
        DELAY               500000
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1124


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125
//! @SYMAPI                 CFbsBitGc::SetClippingRegion(const TRegion{ptr})
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping region to two nonadjacent rectangles;
//!                         Draw a rectangle in which one clipping area is encircled and whose right edge acrosses another clipping area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create two CFbsBitGc objects.
//!                         4. Activate a CFbsBitGc object and clear the screen.
//!                         5. Activate another CFbsBitGc object.
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 0, 0).
//!                         8. Set the clipping region to TRect(50, 50, 80, 80) and TRect(100, 50, 130, 80).
//!                         9. Draw a rectangle TRect(30, 30, 120, 100) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The clipped rectangle will be drawn as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-Activate_command05
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-Activate_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-SetBrushColor_command09
        COMMAND             fbsBitGc             SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-SetClippingRegion_command10        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-DrawRect_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125-checkRectColor_command13
        DELAY               500000
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1125


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126
//! @SYMAPI                 CFbsBitGc::SetClippingRegion(const TRegion{ptr})
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the clipping region to two intersectant rectangles;
//!                         Draw a rectangle whose one corner is in one clipping area respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create two CFbsBitGc objects.
//!                         4. Activate a CFbsBitGc object and clear the screen.
//!                         5. Activate another CFbsBitGc object.
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 255).
//!                         8. Set the clipping region to TRect(20, 20, 100, 100) and TRect(80, 80, 160, 160).
//!                         9. Draw a rectangle TRect(60, 60, 120, 120) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The clipped rectangle will be drawn as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitGc            fbsBitGc2
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc2            NewL
        COMMAND             fbsBitGc2            Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-Activate_command05
        COMMAND             fbsBitGc2            Clear
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-Activate_command07
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-SetBrushStyle_command08
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-SetBrushColor_command09
        COMMAND             fbsBitGc             SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-SetClippingRegion_command10        
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-DrawRect_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126-checkRectColor_command13
        DELAY               500000
        COMMAND             fbsBitGc2            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1126


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127
//! @SYMAPI                 CFbsBitGc::SetClippingRegion(const TRegion{ptr})
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case; Set the clipping region to TRect(-1, -1, 100, 100).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc objects.
//!                         4. Activate the CFbsBitGc objects and clear the screen.
//!                         5. Set the clipping region to TRect(-1, -1, 100, 100).
//!                         6. Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         7 .Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults SetClippingRegion returns -6(KErrArgument).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND !Error=-6   fbsBitGc             SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127-SetClippingRegion_command06
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1127


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128
//! @SYMAPI                 CFbsBitGc::SetClippingRegion(const TRegion{ptr})
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case; Set the clipping region to TRect(10, 10, 9999, 9999).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc objects.
//!                         4. Activate the CFbsBitGc objects and clear the screen.
//!                         5. Set the clipping region to TRect(10, 10, 9999, 9999).
//!                         6. Destroy two CFbsBitGc objects and CFbsScreenDevice object.
//!                         7 .Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults SetClippingRegion returns -6(KErrArgument).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND !Error=-6   fbsBitGc             SetClippingRegion                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128-SetClippingRegion_command06
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
    END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1128


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131
//! @SYMAPI                 CFbsBitGc::SetFaded(TBool);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fade mode to ETrue and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 0, 255).
//!                         7. Set the fade mode to ETrue.
//!                         8. Set the fading parameters to (255, 255). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will be mapped to TRgb(255, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1131


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132
//! @SYMAPI                 CFbsBitGc::SetFaded(TBool);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fade mode to EFalse and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Set the fade mode to EFalse.
//!                         8. Set the fading parameters to (255, 255). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will still be TRgb(255, 0, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1132


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133
//! @SYMAPI                 CFbsBitGc::SetFadingParameters(TUint8, TUint8);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fading parameters to (66, 130) and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 255, 0).
//!                         7. Set the fade mode to ETrue.
//!                         8. Set the fading parameters to (66, 130). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will be mapped to TRgb(66, 130, 66).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1133


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134
//! @SYMAPI                 CFbsBitGc::SetFadingParameters(TUint8, TUint8);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fading parameters to (0, 255) and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 255, 0).
//!                         7. Set the fade mode to ETrue.
//!                         8. Set the fading parameters to (0, 255). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will still be TRgb(0, 255, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1134


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135
//! @SYMAPI                 CFbsBitGc::SetFadingParameters(TUint8, TUint8);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fading parameters to (0, 0) and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 127, 0).
//!                         7. Set the fade mode to ETrue.
//!                         8. Set the fading parameters to (0, 0). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will be mapped to TRgb(0, 0, 0).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1135


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136
//! @SYMAPI                 CFbsBitGc::SetFadingParameters(TUint8, TUint8);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the fading parameters to (255, 0) and draw a rectangle in the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Set the fade mode to ETrue.
//!                         8. Set the fading parameters to (255, 0). 
//!                         9. Draw a rectangle TRect(30, 30, 60, 60) and update the device.
//!                         10.Check rectangle color.
//!                         11.Delay half a second.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle color will be mapped to TRgb(0, 255, 255).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-SetBrushColor_command07
        COMMAND             fbsBitGc             SetFaded                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-SetFaded_command08
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-SetFadingParameters_command09
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-DrawRect_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1136


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141
//! @SYMAPI                 CFbsBitGc::SetDitherOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the dither origion to TPoint(3, 3) and draw a pie.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Set the dither origin to TPoint(3, 3).
//!                         8. Draw a pie.
//!                         9. Update the device and Delay half a second.
//!                         10.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         11.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults A pie will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-SetBrushColor_command07
        COMMAND             fbsBitGc             SetDitherOrigin                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-SetDitherOrigin_command08
        COMMAND             fbsBitGc             DrawPie                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141-DrawPie_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1141


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142
//! @SYMAPI                 CFbsBitGc::SetOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the origin to TPoint(100, 100) and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 0, 255).
//!                         7. Set the origin to TPoint(100, 100).
//!                         8. Draw a rectangle TRect(0, 0, 80, 60).
//!                         9. Check whether the rectangle is in TRect(100, 100, 180, 60).
//!                         10.Update the device and Delay half a second.
//!                         11.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         12.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle is in TRect(100, 100, 180, 160) as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-SetBrushColor_command07
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-SetOrigin_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-DrawRect_command09
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142-checkRectColor_command10
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1142


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143
//! @SYMAPI                 CFbsBitGc::SetOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the origin to TPoint(-50, -50) and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(0, 255, 0).
//!                         7. Set the origin to TPoint(-50, -50).
//!                         8. Draw a rectangle TRect(100, 100, 180, 160).
//!                         9. Check whether the rectangle is in TRect(50, 50, 130, 110).
//!                         10.Update the device and Delay half a second.
//!                         11.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         12.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle is in TRect(50, 50, 130, 110) as expected.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-SetBrushColor_command07
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-SetOrigin_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-DrawRect_command09
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143-checkRectColor_command10
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1143


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144
//! @SYMAPI                 CFbsBitGc::SetOrigin(const TPoint{ref});
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the origin to TPoint(-50, 0), TPoint(0, 0) and draw two rectangles respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set the brush style to ESolidBrush.
//!                         6. Set the brush color to TRgb(255, 0, 0).
//!                         7. Set the origin to TPoint(-50, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 60).
//!                         9. Set the origin to TPoint(0, 0).
//!                         10.Draw a rectangle TRect(120, 0, 160, 60).
//!                         11.Check whether two rectangles are in expected position.
//!                         12.Update the device and Delay half a second.
//!                         13.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         14.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. The right half part of the first rectangle will be drawn in TRect(0, 0, 50, 60).
//!                         2. The second rectangle will be drawn in TRect(120, 0, 160, 60).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-SetBrushColor_command07
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-SetOrigin_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-DrawRect_command09
        COMMAND             fbsBitGc             SetOrigin                              GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-SetOrigin_command10
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-DrawRect_command11
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144-checkRectColor_command12
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1144


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146
//! @SYMAPI                 CFbsBitGc::SetOrientation(TGraphicsOrientation);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the orientation to EGraphicsOrientationNormal, EGraphicsOrientationRotated90, EGraphicsOrientationRotated180, 
//!                         EGraphicsOrientationRotated270 respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         7. Call OrientationsAvailable(TBool[4]).
//!                         8. Set the orientation to EGraphicsOrientationRotated90.
//!                         9. Set the orientation to EGraphicsOrientationRotated180.
//!                         10.Set the orientation to EGraphicsOrientationRotated270.
//!                         11.Set the orientation to EGraphicsOrientationNormal.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Results returned by SetOrientation match those acquired from OrientationsAvailable.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             OrientationsAvailable                  
        COMMAND             fbsBitGc             SetOrientation                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-SetOrientation_command07
        DELAY               250000
        COMMAND             fbsBitGc             SetOrientation                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-SetOrientation_command08
        DELAY               250000
        COMMAND             fbsBitGc             SetOrientation                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-SetOrientation_command09
        DELAY               250000
        COMMAND             fbsBitGc             SetOrientation                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146-SetOrientation_command10
        DELAY               250000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1146


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1147
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1147
//! @SYMAPI                 CFbsBitGc::SetOrientation(TGraphicsOrientation);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Negatvie case; Set the orientation to EGraphicsOrientationRotated90 using a non-active graphics context.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Set the orientation to EGraphicsOrientationRotated90.
//!                         4. Destroy CFbsBitGc object.
//!                         5. Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults SetOrientation returns false.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             SetOrientation                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1147-SetOrientation_command07
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1147


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151
//! @SYMAPI                 CFbsBitGc::SetStrikethroughStyle(TFontStrikethrough);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the strikethrough style to EStrikethroughOn, EStrikethroughOff and draw two lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Get and use a font.
//!                         6. Set the strikethrough style to EStrikethroughOn.
//!                         7. Draw a line of text.
//!                         8. Set the strikethrough style to EStrikethroughOff.
//!                         9. Draw a line of text.
//!                         10. Update the device and Delay half a second.
//!                         11. Descard and release the font.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. A line of text with strikethrough will be drawn in first line.
//!                         2. A line of text without strikethrough will be drawn in second line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-UseFont_command07
        COMMAND             fbsBitGc             SetStrikethroughStyle                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-SetStrikethroughStyle_command08
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-DrawText_command09
        COMMAND             fbsBitGc             SetStrikethroughStyle                  GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-SetStrikethroughStyle_command10
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-DrawText_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151-ReleaseFont_command15
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1151


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153
//! @SYMAPI                 CFbsBitGc::SetUnderlineStyle(TFontUnderline);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the underline style to EUnderlineOn, EUnderlineOff and draw two lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Get and use a font.
//!                         6. Set the underline style to EUnderlineOn.
//!                         7. Draw a line of text.
//!                         8. Set the underline style to EUnderlineOff.
//!                         9. Draw a line of text.
//!                         10.Update the device and Delay half a second.
//!                         11.Descard and release the font.
//!                         12.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         13.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. A line of text with underline will be drawn in first line.
//!                         2. A line of text without underline will be drawn in second line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-UseFont_command07
        COMMAND             fbsBitGc             SetUnderlineStyle                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-SetStrikethroughStyle_command08
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-DrawText_command09
        COMMAND             fbsBitGc             SetUnderlineStyle                      GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-SetStrikethroughStyle_command10
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-DrawText_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153-ReleaseFont_command15
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1153


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155
//! @SYMAPI                 CFbsBitGc::SetShadowMode(TBool);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the shadow mode on, then off, and draw threee lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Set pen size to TSize(2, 2).
//!                         6. Set pen color to TRgb(255, 191, 0);
//!                         7. Get and use a font.
//!                         8. Draw a line of text.
//!                         9. Set the shadow mode to ETrue.
//!                         10.Draw a line of text.
//!                         11.Set the shadow mode to EFalse.
//!                         12.Draw a line of text.
//!                         13.Update the device and Delay half a second.
//!                         14.Descard and release the font.
//!                         15.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         16.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. A line of text with normal color will be drawn in first line.
//!                         2. A line of text with shadow color will be drawn in second line.
//!                         3. A line of text with normal color will be drawn in third line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenSize                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-SetPenSize_command06
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-SetPenColor_command07
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-GetNearestFontToDesignHeightInPixels_command08
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-UseFont_command09
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-DrawText_command10
        COMMAND             fbsBitGc             SetShadowMode                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-SetShadowMode_command11
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-DrawText_command12
        COMMAND             fbsBitGc             SetShadowMode                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-SSetShadowMode_command13
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-DrawText_command14
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155-ReleaseFont_command18
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1155


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156
//! @SYMAPI                 CFbsBitGc::SetCharJustification(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the character justification to (30, 6), (-20, 6), and draw three lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Get and use a font.
//!                         6. Draw a line of text.
//!                         7. Set the character justification to (30, 6).
//!                         8. Draw a line of text.
//!                         9. Set the character justification to (-20, 6).
//!                         10.Draw a line of text.
//!                         11.Update the device and Delay half a second.
//!                         12.Descard and release the font.
//!                         13.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         14.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. A line of text without character justification will be drawn in first line.
//!                         2. A line of text whose left six character gaps are justified widen will be drawn in second line.
//!                         3. A line of text whose left six character gaps are justified narrow will be drawn in third line.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-UseFont_command07
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-DrawText_command08
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-SetCharJustification_command09
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-DrawText_command10
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-SetCharJustification_command11
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-DrawText_command12
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156-ReleaseFont_command16
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1156


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157
//! @SYMAPI                 CFbsBitGc::SetCharJustification(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the character justification to (0, 6), (20, 0), (0, 0) and draw four lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Get and use a font.
//!                         6. Draw a line of text.
//!                         7. Set the character justification to (0, 6).
//!                         8. Draw a line of text.
//!                         9. Set the character justification to (20, 0).
//!                         10.Draw a line of text.
//!                         11.Set the character justification to (0, 0).
//!                         12.Draw a line of text.
//!                         13.Update the device and Delay half a second.
//!                         14.Descard and release the font.
//!                         15.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         16.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Four lines of text without char justification will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-UseFont_command07
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-DrawText_command08
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-SetCharJustification_command09
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-DrawText_command10
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-SetCharJustification_command11
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-DrawText_command12
        COMMAND             fbsBitGc             SetCharJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-SetCharJustification_command13
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-DrawText_command14
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157-ReleaseFont_command18
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1157


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158
//! @SYMAPI                 CFbsBitGc::SetWordJustification(TInt, TInt);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the word justification to (20, 0), (-10, 2), (-20, -2), (20, 2) and draw four lines of text respectively.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the device.
//!                         5. Get and use a font.
//!                         6. Set the word justification to (20, 0).
//!                         7. Draw a line of text.
//!                         8. Set the word justification to (-10, 2).
//!                         9. Draw a line of text.
//!                         10.Set the word justification to (-20, 2).
//!                         11.Draw a line of text.
//!                         12.Set the word justification to (20, 2).
//!                         13.Draw a line of text.
//!                         14.Update the device and Delay half a second.
//!                         15.Descard and release the font.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. Four lines of text will be drawn without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             font
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsScrDev            GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-GetNearestFontToDesignHeightInPixels_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-UseFont_command07
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-SetWordJustification_command08
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-DrawText_command09
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-SetWordJustification_command10
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-DrawText_command11
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-SetWordJustification_command12
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-DrawText_command13
        COMMAND             fbsBitGc             SetWordJustification                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-SetWordJustification_command14
        COMMAND             fbsBitGc             DrawText                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-DrawText_command15
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             DiscardFont 
        COMMAND             fbsScrDev            ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158-ReleaseFont_command19
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1158


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161
//! @SYMAPI                 CFbsBitGc::SetUserDisplayMode(TDisplayMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Simulate the display mode EGray2 and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         7. Set the brush style to ESolidBrush.
//!                         8. Set the brush color to TRgb(100, 100, 100).
//!                         9. Set the display mode to EGray2.
//!                         10.Draw a rectangle TRect(30, 30, 90, 120).
//!                         11.Set the brush color to TRgb(200, 200, 200).
//!                         12.Draw a rectangle TRect(100, 30, 160, 120).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. A rectangle with color TRgb(0, 0, 0) will be drawn.
//!                         2. A rectangle with color TRgb(255, 255, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-SetBrushStyle_command06
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-SetBrushColor_command07
        COMMAND             fbsBitGc             SetUserDisplayMode                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-SetUserDisplayMode_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-DrawRect_command09
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-SetBrushColor_command10
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-DrawRect_command11
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-checkRectColor_command13
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161-checkRectColor_command14
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1161


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeAND and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeAND.
//!                         10.Set the pen color to TRgb(255, 255, 255).
//!                         11.Set the brush color to TRgb(255, 255, 255).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1163


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTAND and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 255, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 255, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTAND.
//!                         10.Set the pen color to TRgb(255, 255, 255).
//!                         11.Set the brush color to TRgb(255, 255, 255).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1164


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModePEN and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 255, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModePEN.
//!                         10.Set the pen color to TRgb(0, 0, 0).
//!                         11.Set the brush color to TRgb(0, 0, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1165


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeANDNOT and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 255, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 255, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeANDNOT.
//!                         10.Set the pen color to TRgb(255, 255, 255).
//!                         11.Set the brush color to TRgb(255, 255, 255).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1166


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeXOR and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeXOR.
//!                         10.Set the pen color to TRgb(255, 255, 255).
//!                         11.Set the brush color to TRgb(255, 255, 255).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 255, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1167


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeOR and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeOR.
//!                         10.Set the pen color to TRgb(0, 0, 0).
//!                         11.Set the brush color to TRgb(0, 0, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(255, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1168


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTANDNOT and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTANDNOT.
//!                         10.Set the pen color to TRgb(0, 0, 0).
//!                         11.Set the brush color to TRgb(0, 0, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 255, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1169


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTXOR and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTXOR.
//!                         10.Set the pen color to TRgb(0, 0, 0).
//!                         11.Set the brush color to TRgb(0, 0, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 255, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1170


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTSCREEN and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTSCREEN.
//!                         10.Set the pen color to TRgb(1, 2, 3).
//!                         11.Set the brush color to TRgb(3, 2, 1).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(255, 255, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1171


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTOR and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTOR.
//!                         10.Set the pen color to TRgb(0, 0, 0).
//!                         11.Set the brush color to TRgb(0, 0, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(255, 255, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1172


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTPEN and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTPEN.
//!                         10.Set the pen color to TRgb(0, 255, 0).
//!                         11.Set the brush color to TRgb(0, 255, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(255, 0, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1173


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeORNOT and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(0, 0, 0).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(0, 0, 0).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeORNOT.
//!                         10.Set the pen color to TRgb(255, 255, 255).
//!                         11.Set the brush color to TRgb(255, 255, 255).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(0, 0, 0) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1174


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175
//! @SYMAPI                 CFbsBitGc::SetDrawMode(TDrawMode);
//! @SYMAuthor              Forbes Fu
//! @SYMCreationDate        13/01/2009
//! @SYMTestCaseDesc        Set the drawing mode to EDrawModeNOTORNOT and draw a rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsScreenDevice object.
//!                         3. Create a CFbsBitGc object.
//!                         4. Activate the CFbsBitGc object and clear the screen.
//!                         5. Set the pen color to TRgb(255, 255, 255).
//!                         6. Set the brush style to ESolidBrush.
//!                         7. Set the brush color to TRgb(255, 255, 255).
//!                         8. Draw a rectangle TRect(0, 0, 100, 100).
//!                         9. Set the drawing mode to EDrawModeNOTORNOT.
//!                         10.Set the pen color to TRgb(0, 255, 0).
//!                         11.Set the brush color to TRgb(0, 255, 0).
//!                         12.Draw a rectangle TRect(30, 30, 60, 60).
//!                         13.Update the device.
//!                         14.Check whether rectangle color is expected.
//!                         15.Delay half a second.
//!                         16.Destroy CFbsBitGc object and CFbsScreenDevice object.
//!                         17.Disconnect RFbsSession.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The rectangle TRect(30, 30, 60, 60) with color TRgb(255, 0, 255) will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-NewL_command02
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-Activate_command04
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetPenColor_command06
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetBrushStyle_command07
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetBrushColor_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-DrawRect_command09
        COMMAND             fbsBitGc             SetDrawMode                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetDrawMode_command10
        COMMAND             fbsBitGc             SetPenColor                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetPenColor_command11
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-SetBrushColor_command12
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-DrawRect_command13
        COMMAND             fbsScrDev            Update       
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175-checkRectColor_command15        
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-1175


START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321
//! @SYMAPI                 CFbsBitGc::ShadowArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the shadow area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Sets the shadow area to rectangle area TRect(0, 0, 50, 50) and update the device.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults ShadowArea() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             ShadowArea                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321-ShadowArea_command08
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2321

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322
//! @SYMAPI                 CFbsBitGc::ShadowArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Set the shadow area to empty rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Sets the shadow area to rectangle area TRect(0, 0, 0, 0).
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults ShadowArea() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             ShadowArea                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322-ShadowArea_command08
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2322

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323
//! @SYMAPI                 CFbsBitGc::ShadowArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Set the shadow area with null region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Sets the shadow area with null region.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults ShadowArea() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             ShadowArea
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2323

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331
//! @SYMAPI                 CFbsBitGc::FadeArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Set the fade area.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Set fading parameters to 63 and 130.
//!                         7. Draw a rectangle area (0, 0, 50, 50).
//!                         8. Sets the fade area to rectangle area TRect(0, 0, 50, 50).
//!                         9. Check the drawn rectangle.
//!                         10. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults 1. FadeArea() is called without error.
//!                         2. The rectangle drawn in color TRgb(63, 63, 130).
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             SetFadingParameters                    GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-SetFadingParameters_command08
        COMMAND             fbsBitGc             DrawRect                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-DrawRect_command09
        COMMAND             fbsBitGc             FadeArea                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-FadeArea_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsScrDev            checkRectColor                         GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331-checkRectColor_command12
        DELAY               500000
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2331

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332
//! @SYMAPI                 CFbsBitGc::FadeArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Set the fade area to empty rectangle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Sets the fade area to rectangle area TRect(0, 0, 0, 0).
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FadeArea() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             FadeArea                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332-FadeArea_command08
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2332

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333
//! @SYMAPI                 CFbsBitGc::FadeArea(const TRegion{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Negative case. Set the fade area with null region.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object.
//!                         4. Activate the CFbsBitGc object to draw to CFbsScreenDevice object.
//!                         5. Set brush style to ESolidBrush and brush color to TRgb(0, 0, 255) and clear the device.
//!                         6. Sets the fade area with null region.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults FadeArea() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsScrDev            NewL                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333-NewL_command03
        COMMAND             fbsBitGc             Activate                               GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333-Activate_command04
        COMMAND             fbsBitGc             SetBrushStyle                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333-SetBrushStyle_command05
        COMMAND             fbsBitGc             SetBrushColor                          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333-SetBrushColor_command06
        COMMAND             fbsBitGc             Clear
        COMMAND             fbsBitGc             FadeArea
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2333

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Set the CFbsBitGc object to use a specified bitmap as brush pattern.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Sets the brush pattern to the CFbsBitmap object.
//!                         5. Test if brush pattern is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseBrushPattern() is called without error. After this call, IsBrushPatternUsed() returns true.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701-Load_command04
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701-UseBrushPattern_command05
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701-IsBrushPatternUsed_command06
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2701

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2702
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2702
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use a not loaded bitmap as brush pattern.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object and a CFbsBitmap object.
//!                         3. Sets the brush pattern to the CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 13 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2702-UseBrushPattern_command04
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=13
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2702

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2703
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2703
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(const CFbsBitmap{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use a null bitmap as brush pattern.
//! @SYMTestActions         1. Create a CFbsBitGc object and a CFbsBitmap object..
//!                         2. Sets the brush pattern to the CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 13 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2703-UseBrushPattern_command03
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=13
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2703

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the CFbsBitGc object to use a specified bitmap as brush pattern through handle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Sets the brush pattern to the handle of CFbsBitmap object.
//!                         5. Test if brush pattern is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseBrushPattern() is called without error. After this call, IsBrushPatternUsed() returns true.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711-Load_command04
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711-UseBrushPattern_command05
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711-IsBrushPatternUsed_command06
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2711

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use a specified bitmap as brush pattern twice through handle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Sets the brush pattern to the handle of CFbsBitmap object.
//!                         5. Test if brush pattern is used.
//!                         6. Sets the brush pattern to the handle of CFbsBitmap object.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseBrushPattern() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712-Load_command04
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712-UseBrushPattern_command05
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712-IsBrushPatternUsed_command06
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712-UseBrushPattern_command07
        COMMAND             fbsBitGc             ~
        COMMAND             fbsBitmap            ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2712

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2713
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2713
//! @SYMAPI                 CFbsBitGc::UseBrushPattern(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use an invalid bitmap handle as brush pattern.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Sets the brush pattern to the handle of CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 13 of BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2713-UseBrushPattern_command05
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=13
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2713

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721
//! @SYMAPI                 CFbsBitGc::UseFont(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Set the CFbsBitGc object to use a specified font through handle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseFont() is called without error. After this call, IsFontUsed() returns true.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721-UseFont_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721-IsFontUsed_command06
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721-ReleaseFont_command07
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2721

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722
//! @SYMAPI                 CFbsBitGc::UseFont(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use a specified font through handle twice.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseFont() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722-UseFont_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722-IsFontUsed_command06
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722-UseFont_command07
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722-ReleaseFont_command08
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2722

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2723
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2723
//! @SYMAPI                 CFbsBitGc::UseFont(TInt)
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        12/01/2009
//! @SYMTestCaseDesc        Negative case. Set the CFbsBitGc object to use a font through an invalid handle.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get panic code 12 of BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2723-UseFont_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=12
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2723

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731
//! @SYMAPI                 CFbsBitGc::UseFontNoDuplicate(const CFont{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Select the device font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseFont() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFontNoDuplicate                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731-UseFontNoDuplicate_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731-IsFontUsed_command06
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731-ReleaseFont_command07
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2731

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732
//! @SYMAPI                 CFbsBitGc::UseFontNoDuplicate(const CFont{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Negative case. Select the same device font twice.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Select the device font using CFbsBitGc object
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseFont() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFontNoDuplicate                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732-UseFontNoDuplicate_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732-IsFontUsed_command06
        COMMAND             fbsBitGc             UseFontNoDuplicate                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732-UseFontNoDuplicate_command07
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732-ReleaseFont_command08
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2732

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801
//! @SYMAPI                 CFbsBitGc::UseFont(const CFont{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Select the device font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Get font and select the device font using CFbsBitGc object.
//!                         5. Test if font is used.
//!                         6. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults UseFont() is called without error.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801-UseFont_command05
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801-IsFontUsed_command06
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801-ReleaseFont_command07
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2801

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2802
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2802
//! @SYMAPI                 CFbsBitGc::UseFont(const CFont{ptr})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        08/01/2009
//! @SYMTestCaseDesc        Negative case. Select a null font to CFbsBitGc object.
//! @SYMTestActions         1. Create a CFbsBitGc object and a CFbsFont object.
//!                         2. Select the null font using CFbsBitGc object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 12 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2802-UseFont_command02
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=12
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2802

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901
//! @SYMAPI                 CFbsBitGc::IsBrushPatternUsed()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Tests whether a brush pattern is being used.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsBitmap object.
//!                         4. Test if brush pattern is used.
//!                         5. Sets the brush pattern to the CFbsBitmap object.
//!                         6. Test if brush pattern is used.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsBitmap object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults IsBrushPattern() is called without error. Before UseBrushPattern() called, IsBrushPatternUsed() return false. After that call, it returns true.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsBitmap            new
        COMMAND             fbsBitmap            Load                                   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901-Load_command04
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901-IsBrushPatternUsed_command05
        COMMAND             fbsBitGc             UseBrushPattern                        GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901-UseBrushPattern_command06
        COMMAND             fbsBitGc             IsBrushPatternUsed                     GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901-IsBrushPatternUsed_command07
        COMMAND             fbsBitmap            ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2901

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951
//! @SYMAPI                 CFbsBitGc::IsFontUsed()
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        09/01/2009
//! @SYMTestCaseDesc        Tests whether a font is being used.
//! @SYMTestCaseDesc        Select the device font.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsFont object and a CFbsTypefaceStore object.
//!                         4. Test if font is used.
//!                         5. Get font and select the device font using CFbsBitGc object.
//!                         6. Test if font is used.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object, release CFbsFont object and CFbsTypefaceStore object.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults IsFontUsed() is called without error. Before UseFont() called, IsFontUsed() return false. After that call, it returns true.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
       	CREATE_OBJECT       CFbsTypefaceStore    fbsTypefaceStore
        CREATE_OBJECT       CFbsFont             fbsFont
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
       	COMMAND             fbsTypefaceStore     NewL
        COMMAND             fbsTypefaceStore     GetNearestFontToDesignHeightInPixels   GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951-GetNearestFontToDesignHeightInPixels_command04
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951-IsFontUsed_command05
        COMMAND             fbsBitGc             UseFont                                GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951-UseFont_command06
        COMMAND             fbsBitGc             IsFontUsed                             GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951-IsFontUsed_command07
       	COMMAND             fbsTypefaceStore     ReleaseFont                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951-ReleaseFont_command08
       	COMMAND             fbsTypefaceStore     ~
        COMMAND             fbsBitGc             ~
        COMMAND             fbsSession           Disconnect
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-2951

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        25/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The action is performed successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-Load_command10
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3001

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create 3 CFbsBitmap objects.
//!                         4. Load 3 bitmaps.
//!                         5. Perform alpha blending.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002-Load_command06
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002-AlphaBlendBitmaps_command09
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3002

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with error point arguments.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3003

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with 1st src bitmap null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004-Activate_command06
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004-Load_command08
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3004

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with 2nd src bitmap null.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005-Load_command08
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3005

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with null alpha bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006-Load_command07
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006-Load_command08
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3006

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of an empty rectangle area of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3007

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with 1st src bitmap not loaded.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008-Activate_command07
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008-Load_command08
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008-Load_command09
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008-AlphaBlendBitmaps_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3008

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with 2nd src bitmap not loaded.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009-Load_command08
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009-Load_command09
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009-AlphaBlendBitmaps_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3009

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with alpha bitmap not loaded.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010-Load_command09
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010-AlphaBlendBitmaps_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3010

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of rectangle area (0, 0, 500, 500) of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3011

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap to point (-9000, -9000).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3012

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with alpha point set to (-10, 0).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3013

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const CFbsBitmap{ptr},const TRect{ref},const TPoint{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        29/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap with alpha point set to (10, -10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 3 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 3 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error code -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap2
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsSrcBitmap2        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-NewL_command06
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-Activate_command07
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-Load_command08
        COMMAND             fbsSrcBitmap2        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-Load_command10
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSrcBitmap2        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3014

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The action is performed successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3037

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref}const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create 2 CFbsBitmap objects.
//!                         4. Load 2 bitmaps.
//!                         5. Perform alpha blending.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038-Load_command05
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038-Load_command06
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038-AlphaBlendBitmaps_command07
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3038

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of a null source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load mask bitmap.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039-NewL_command04
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039-Activate_command05
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039-Load_command06
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039-AlphaBlendBitmaps_command07
        COMMAND             fbsScrDev            Update
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3039

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of a not loaded source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load mask bitmap.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040-Activate_command06
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040-Load_command07
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040-AlphaBlendBitmaps_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3040

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of a null mask bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src bitmap.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041-NewL_command04
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041-Activate_command05
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041-Load_command06
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041-AlphaBlendBitmaps_command07
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3041

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of a not loaded mask bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load src bitmap.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042-Load_command07
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042-AlphaBlendBitmaps_command08
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3042

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of an empty rectangle area of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043-Load_command08
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3043

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of an out of bound rectangle area of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3044

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of a source bitmap with clipping rectangle set to (-100, -100, -90, -90).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Load 2 bitmaps.
//!                         7. Perform alpha blending.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Error -6 is returned.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-Load_command08
        COMMAND             fbsBitGc             SetClippingRect                GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-SetClippingRect_command09
        COMMAND !Error=-6   fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045-AlphaBlendBitmaps_command10
        COMMAND             fbsScrDev            Update
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3045

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of a source bitmap with alpha point (-10, 10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Load 2 bitmaps.
//!                         7. Perform alpha blending.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3046

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of a source bitmap with alpha point (10, -10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Load 2 bitmaps.
//!                         7. Perform alpha blending.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3047

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of a source bitmap with alpha point (0, 10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Load 2 bitmaps.
//!                         7. Perform alpha blending.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3048

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CFbsBitmap{ptr},const TRect{ref},const CFbsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of a source bitmap with alpha point (0, 10).
//! @SYMTestActions         1. Create and connect a RFbsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CFbsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Load 2 bitmaps.
//!                         7. Perform alpha blending.
//!                         8. Disconnect RFbsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CFbsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The bitmap will be drawn.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CFbsBitmap           fbsSrcBitmap1
        CREATE_OBJECT       CFbsBitmap           alphaBitmap
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             fbsSrcBitmap1        new
        COMMAND             alphaBitmap          new
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049-NewL_command05
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049-Activate_command06
        COMMAND             fbsSrcBitmap1        Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049-Load_command07
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049-Load_command08
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049-AlphaBlendBitmaps_command09
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             fbsSrcBitmap1        ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3049

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CWsBitmap{ptr},const TRect{ref},const CWsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Perform an alpha blending of the source bitmap.
//! @SYMTestActions         1. Create and connect a RFbsSession object and a RWsSession.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create a CFbsScreenDevice object and 2 CWsBitmap objects.
//!                         4. Activate the CFbsBitGc object to draw to the CFbsScreenDevice object.
//!                         5. Load 2 bitmaps.
//!                         6. Perform alpha blending.
//!                         7. Disconnect RFbsSession, RWsSession and destruct CFbsBitGc object and CFbsScreenDevice object, CWsBitmap objects.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults The action is performed successfully.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RFbsSession          fbsSession
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CFbsScreenDevice     fbsScrDev
        CREATE_OBJECT       CWsBitmap            wsBitmap
        CREATE_OBJECT       CWsBitmap            alphaBitmap
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             fbsSession           Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             wsBitmap             new                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-new_command05
        COMMAND             alphaBitmap          new                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-new_command06
        COMMAND             fbsScrDev            NewL                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-NewL_command07
        COMMAND             fbsBitGc             Activate                       GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-Activate_command08
        COMMAND             wsBitmap             Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-Load_command09
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-Load_command10
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071-AlphaBlendBitmaps_command11
        COMMAND             fbsScrDev            Update
        DELAY               500000
        COMMAND             wsBitmap             ~
        COMMAND             alphaBitmap          ~
        COMMAND             fbsSession           Disconnect
        COMMAND             wsSession            Close
        COMMAND             fbsBitGc             ~
        COMMAND             fbsScrDev            ~
     END_TEST_BLOCK
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3071

START_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072
//! @SYMTestCaseID          GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072
//! @SYMAPI                 AlphaBlendBitmaps(const TPoint{ref},const CWsBitmap{ptr},const TRect{ref},const CWsBitmap{ptr},const TPoint{ref})
//! @SYMAuthor              Felix Rao
//! @SYMCreationDate        26/12/2008
//! @SYMTestCaseDesc        Negative case. Perform an alpha blending of the source bitmap using a non-activated CFbsBitGc object.
//! @SYMTestActions         1. Create a RWsSession object.
//!                         2. Create a CFbsBitGc object.
//!                         3. Create 2 CWsBitmap objects.
//!                         4. Load 2 bitmaps.
//!                         5. Perform alpha blending.
//! @SYMTestStatus          Implemented
//! @SYMTestPriority        High
//! @SYMTestExpectedResults Get Panic code 1 and PanicString BITGDI.
//! @SYMTestType            CIT

    START_TEST_BLOCK        10   T_GraphicsBitgdiApi         \graphics\GRAPHICS-BITGDI-FbsBitGc-PublicApi-3.ini
        CREATE_OBJECT       RWsSession           wsSession
        CREATE_OBJECT       CFbsBitGc            fbsBitGc
        CREATE_OBJECT       CWsBitmap            wsBitmap
        CREATE_OBJECT       CWsBitmap            alphaBitmap
        COMMAND             wsSession            new
        COMMAND             wsSession            Connect
        COMMAND             fbsBitGc             NewL
        COMMAND             wsBitmap             new                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072-new_command04
        COMMAND             alphaBitmap          new                            GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072-new_command05
        COMMAND             wsBitmap             Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072-Load_command06
        COMMAND             alphaBitmap          Load                           GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072-Load_command07
        COMMAND             fbsBitGc             AlphaBlendBitmaps              GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072-AlphaBlendBitmaps_command08
     END_TEST_BLOCK     !PanicString=BITGDI     !PanicCode=1
     RUN_TEST_STEP	100	T_GraphicsBitgdiApi	utilityClearPanicDlg
END_TESTCASE GRAPHICS-BITGDI-FbsBitGc-PublicApi-3072

